var searchIndex = {};
searchIndex["rdkafka"] = {"doc":"rust-rdkafka A fully asynchronous, [futures]-based Kafka client library for Rust based on [librdkafka].","items":[[0,"types","rdkafka","This module contains type aliases for types defined in the auto-generated bindings.",null,null],[6,"RDKafka","rdkafka::types","Native rdkafka client",null,null],[6,"RDKafkaConf","","Native rdkafka configuration",null,null],[6,"RDKafkaMessage","","Native rdkafka message",null,null],[6,"RDKafkaTopic","","Native rdkafka topic",null,null],[6,"RDKafkaTopicConf","","Native rdkafka topic configuration",null,null],[6,"RDKafkaTopicPartition","","Native rdkafka topic partition",null,null],[6,"RDKafkaTopicPartitionList","","Native rdkafka topic partition list",null,null],[6,"RDKafkaMetadata","","Native rdkafka metadata container",null,null],[6,"RDKafkaMetadataTopic","","Native rdkafka topic information",null,null],[6,"RDKafkaMetadataPartition","","Native rdkafka partition information",null,null],[6,"RDKafkaMetadataBroker","","Native rdkafka broker information",null,null],[6,"RDKafkaState","","Native rdkafka state",null,null],[6,"RDKafkaGroupList","","Native rdkafka list of groups",null,null],[6,"RDKafkaGroupInfo","","Native rdkafka group information",null,null],[6,"RDKafkaGroupMemberInfo","","Native rdkafka group member information",null,null],[4,"RDKafkaError","","Errors enum Error from the underlying rdkafka library.",null,null],[13,"BadMessage","","Received message is incorrect",0,null],[13,"BadCompression","","Bad/unknown compression",0,null],[13,"BrokerDestroy","","Broker is going away",0,null],[13,"Fail","","Generic failure",0,null],[13,"BrokerTransportFailure","","Broker transport failure",0,null],[13,"CriticalSystemResource","","Critical system resource",0,null],[13,"Resolve","","Failed to resolve broker",0,null],[13,"MessageTimedOut","","Produced message timed out",0,null],[13,"PartitionEOF","","Reached the end of the topic+partition queue on the broker. Not really an error.",0,null],[13,"UnknownPartition","","Permanent: Partition does not exist in cluster.",0,null],[13,"FileSystem","","File or filesystem error",0,null],[13,"UnknownTopic","","Permanent: Topic does not exist in cluster.",0,null],[13,"AllBrokersDown","","All broker connections are down.",0,null],[13,"InvalidArgument","","Invalid argument, or invalid configuration",0,null],[13,"OperationTimedOut","","Operation timed out",0,null],[13,"QueueFull","","Queue is full",0,null],[13,"ISRInsufficient","","ISR count < required.acks",0,null],[13,"NodeUpdate","","Broker node update",0,null],[13,"SSL","","SSL error",0,null],[13,"WaitingForCoordinator","","Waiting for coordinator to become available.",0,null],[13,"UnknownGroup","","Unknown client group",0,null],[13,"InProgress","","Operation in progress",0,null],[13,"PreviousInProgress","","Previous operation in progress, wait for it to finish.",0,null],[13,"ExistingSubscription","","This operation would interfere with an existing subscription",0,null],[13,"AssignPartitions","","Assigned partitions (rebalance_cb)",0,null],[13,"RevokePartitions","","Revoked partitions (rebalance_cb)",0,null],[13,"Conflict","","Conflicting use",0,null],[13,"State","","Wrong state",0,null],[13,"UnknownProtocol","","Unknown protocol",0,null],[13,"NotImplemented","","Not implemented",0,null],[13,"Authentication","","Authentication failure",0,null],[13,"NoOffset","","No stored offset",0,null],[13,"Outdated","","Outdated",0,null],[13,"TimedOutQueue","","Timed out in queue",0,null],[13,"UnsupportedFeature","","Feature not supported by broker",0,null],[13,"WaitCache","","Awaiting cache update",0,null],[13,"Interrupted","","Operation interrupted (e.g., due to yield))",0,null],[13,"KeySerialization","","Key serialization error",0,null],[13,"ValueSerialization","","Value serialization error",0,null],[13,"KeyDeserialization","","Key deserialization error",0,null],[13,"ValueDeserialization","","Value deserialization error",0,null],[13,"Partial","","Partial response",0,null],[13,"Unknown","","Unknown broker error",0,null],[13,"NoError","","Success",0,null],[13,"OffsetOutOfRange","","Offset out of range",0,null],[13,"InvalidMessage","","Invalid message",0,null],[13,"UnknownTopicOrPartition","","Unknown topic or partition",0,null],[13,"InvalidMessageSize","","Invalid message size",0,null],[13,"LeaderNotAvailable","","Leader not available",0,null],[13,"NotLeaderForPartition","","Not leader for partition",0,null],[13,"RequestTimedOut","","Request timed out",0,null],[13,"BrokerNotAvailable","","Broker not available",0,null],[13,"ReplicaNotAvailable","","Replica not available",0,null],[13,"MessageSizeTooLarge","","Message size too large",0,null],[13,"StaleControllerEpoch","","Stale controller epoch code",0,null],[13,"OffsetMetadataTooLarge","","Offset metadata string too large",0,null],[13,"NetworkException","","Broker disconnected before response received",0,null],[13,"GroupLoadInProgress","","Group coordinator load in progress",0,null],[13,"GroupCoordinatorNotAvailable","","Group coordinator not available",0,null],[13,"NotCoordinatorForGroup","","Not coordinator for group",0,null],[13,"InvalidTopic","","Invalid topic",0,null],[13,"MessageBatchTooLarge","","Message batch larger than configured server segment size",0,null],[13,"NotEnoughReplicas","","Not enough in-sync replicas",0,null],[13,"NotEnoughReplicasAfterAppend","","Message(s) written to insufficient number of in-sync replicas",0,null],[13,"InvalidRequiredAcks","","Invalid required acks value",0,null],[13,"IllegalGeneration","","Specified group generation id is not valid",0,null],[13,"InconsistentGroupProtocol","","Inconsistent group protocol",0,null],[13,"InvalidGroupId","","Invalid group.id",0,null],[13,"UnknownMemberId","","Unknown member",0,null],[13,"InvalidSessionTimeout","","Invalid session timeout",0,null],[13,"RebalanceInProgress","","Group rebalance in progress",0,null],[13,"InvalidCommitOffsetSize","","Commit offset data size is not valid",0,null],[13,"TopicAuthorizationFailed","","Topic authorization failed",0,null],[13,"GroupAuthorizationFailed","","Group authorization failed",0,null],[13,"ClusterAuthorizationFailed","","Cluster authorization failed",0,null],[13,"InvalidTimestamp","","Invalid timestamp",0,null],[13,"UnsupportedSASLMechanism","","Unsupported SASL mechanism",0,null],[13,"IllegalSASLState","","Illegal SASL state",0,null],[13,"UnsupportedVersion","","Unsupported version",0,null],[13,"TopicAlreadyExists","","Topic already exists",0,null],[13,"InvalidPartitions","","Invalid number of partitions",0,null],[13,"InvalidReplicationFactor","","Invalid replication factor",0,null],[13,"InvalidReplicaAssignment","","Invalid replica assignment",0,null],[13,"InvalidConfig","","Invalid config */",0,null],[13,"NotController","","Not controller for cluster",0,null],[13,"InvalidRequest","","Invalid request",0,null],[13,"UnsupportedForMessageFormat","","Message format on broker does not support request",0,null],[13,"PolicyViolation","","Policy violation",0,null],[13,"OutOfOrderSequenceNumber","","Broker received an out of order sequence number",0,null],[13,"DuplicateSequenceNumber","","Broker received a duplicate sequence number",0,null],[13,"InvalidProducerEpoch","","Producer attempted an operation with an old epoch",0,null],[13,"InvalidTransactionalState","","Producer attempted a transactional operation in an invalid state",0,null],[13,"InvalidProducerIdMapping","","Producer attempted to use a producer id which is currently assigned to its transactional id",0,null],[13,"InvalidTransactionTimeout","","Transaction timeout is larger than the maxi value allowed by the broker's max.transaction.timeout.ms",0,null],[13,"ConcurrentTransactions","","Producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing",0,null],[13,"TransactionCoordinatorFenced","","Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer",0,null],[13,"TransactionalIdAuthorizationFailed","","Transactional Id authorization failed",0,null],[13,"SecurityDisabled","","Security features are disabled",0,null],[13,"OperationNotAttempted","","Operation not attempted",0,null],[4,"RDKafkaRespErr","","",null,null],[13,"RD_KAFKA_RESP_ERR__BEGIN","","",1,null],[13,"RD_KAFKA_RESP_ERR__BAD_MSG","","",1,null],[13,"RD_KAFKA_RESP_ERR__BAD_COMPRESSION","","",1,null],[13,"RD_KAFKA_RESP_ERR__DESTROY","","",1,null],[13,"RD_KAFKA_RESP_ERR__FAIL","","",1,null],[13,"RD_KAFKA_RESP_ERR__TRANSPORT","","",1,null],[13,"RD_KAFKA_RESP_ERR__CRIT_SYS_RESOURCE","","",1,null],[13,"RD_KAFKA_RESP_ERR__RESOLVE","","",1,null],[13,"RD_KAFKA_RESP_ERR__MSG_TIMED_OUT","","",1,null],[13,"RD_KAFKA_RESP_ERR__PARTITION_EOF","","",1,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION","","",1,null],[13,"RD_KAFKA_RESP_ERR__FS","","",1,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC","","",1,null],[13,"RD_KAFKA_RESP_ERR__ALL_BROKERS_DOWN","","",1,null],[13,"RD_KAFKA_RESP_ERR__INVALID_ARG","","",1,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT","","",1,null],[13,"RD_KAFKA_RESP_ERR__QUEUE_FULL","","",1,null],[13,"RD_KAFKA_RESP_ERR__ISR_INSUFF","","",1,null],[13,"RD_KAFKA_RESP_ERR__NODE_UPDATE","","",1,null],[13,"RD_KAFKA_RESP_ERR__SSL","","",1,null],[13,"RD_KAFKA_RESP_ERR__WAIT_COORD","","",1,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_GROUP","","",1,null],[13,"RD_KAFKA_RESP_ERR__IN_PROGRESS","","",1,null],[13,"RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS","","",1,null],[13,"RD_KAFKA_RESP_ERR__EXISTING_SUBSCRIPTION","","",1,null],[13,"RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS","","",1,null],[13,"RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS","","",1,null],[13,"RD_KAFKA_RESP_ERR__CONFLICT","","",1,null],[13,"RD_KAFKA_RESP_ERR__STATE","","",1,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PROTOCOL","","",1,null],[13,"RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED","","",1,null],[13,"RD_KAFKA_RESP_ERR__AUTHENTICATION","","",1,null],[13,"RD_KAFKA_RESP_ERR__NO_OFFSET","","",1,null],[13,"RD_KAFKA_RESP_ERR__OUTDATED","","",1,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE","","",1,null],[13,"RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE","","",1,null],[13,"RD_KAFKA_RESP_ERR__WAIT_CACHE","","",1,null],[13,"RD_KAFKA_RESP_ERR__INTR","","",1,null],[13,"RD_KAFKA_RESP_ERR__KEY_SERIALIZATION","","",1,null],[13,"RD_KAFKA_RESP_ERR__VALUE_SERIALIZATION","","",1,null],[13,"RD_KAFKA_RESP_ERR__KEY_DESERIALIZATION","","",1,null],[13,"RD_KAFKA_RESP_ERR__VALUE_DESERIALIZATION","","",1,null],[13,"RD_KAFKA_RESP_ERR__PARTIAL","","",1,null],[13,"RD_KAFKA_RESP_ERR__END","","",1,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN","","",1,null],[13,"RD_KAFKA_RESP_ERR_NO_ERROR","","",1,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_OUT_OF_RANGE","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG","","",1,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG_SIZE","","",1,null],[13,"RD_KAFKA_RESP_ERR_LEADER_NOT_AVAILABLE","","",1,null],[13,"RD_KAFKA_RESP_ERR_NOT_LEADER_FOR_PARTITION","","",1,null],[13,"RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT","","",1,null],[13,"RD_KAFKA_RESP_ERR_BROKER_NOT_AVAILABLE","","",1,null],[13,"RD_KAFKA_RESP_ERR_REPLICA_NOT_AVAILABLE","","",1,null],[13,"RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE","","",1,null],[13,"RD_KAFKA_RESP_ERR_STALE_CTRL_EPOCH","","",1,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_METADATA_TOO_LARGE","","",1,null],[13,"RD_KAFKA_RESP_ERR_NETWORK_EXCEPTION","","",1,null],[13,"RD_KAFKA_RESP_ERR_GROUP_LOAD_IN_PROGRESS","","",1,null],[13,"RD_KAFKA_RESP_ERR_GROUP_COORDINATOR_NOT_AVAILABLE","","",1,null],[13,"RD_KAFKA_RESP_ERR_NOT_COORDINATOR_FOR_GROUP","","",1,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_EXCEPTION","","",1,null],[13,"RD_KAFKA_RESP_ERR_RECORD_LIST_TOO_LARGE","","",1,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS","","",1,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS_AFTER_APPEND","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUIRED_ACKS","","",1,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION","","",1,null],[13,"RD_KAFKA_RESP_ERR_INCONSISTENT_GROUP_PROTOCOL","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_GROUP_ID","","",1,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_SESSION_TIMEOUT","","",1,null],[13,"RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_COMMIT_OFFSET_SIZE","","",1,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED","","",1,null],[13,"RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED","","",1,null],[13,"RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TIMESTAMP","","",1,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_SASL_MECHANISM","","",1,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_SASL_STATE","","",1,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_VERSION","","",1,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_ALREADY_EXISTS","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PARTITIONS","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICATION_FACTOR","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICA_ASSIGNMENT","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_CONFIG","","",1,null],[13,"RD_KAFKA_RESP_ERR_NOT_CONTROLLER","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUEST","","",1,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT","","",1,null],[13,"RD_KAFKA_RESP_ERR_POLICY_VIOLATION","","",1,null],[13,"RD_KAFKA_RESP_ERR_OUT_OF_ORDER_SEQUENCE_NUMBER","","",1,null],[13,"RD_KAFKA_RESP_ERR_DUPLICATE_SEQUENCE_NUMBER","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TXN_STATE","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING","","",1,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TRANSACTION_TIMEOUT","","",1,null],[13,"RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS","","",1,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTION_COORDINATOR_FENCED","","",1,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_FAILED","","",1,null],[13,"RD_KAFKA_RESP_ERR_SECURITY_DISABLED","","",1,null],[13,"RD_KAFKA_RESP_ERR_OPERATION_NOT_ATTEMPTED","","",1,null],[13,"RD_KAFKA_RESP_ERR_END_ALL","","",1,null],[4,"RDKafkaType","","",null,null],[13,"RD_KAFKA_PRODUCER","","",2,null],[13,"RD_KAFKA_CONSUMER","","",2,null],[4,"RDKafkaConfRes","","",null,null],[13,"RD_KAFKA_CONF_UNKNOWN","","",3,null],[13,"RD_KAFKA_CONF_INVALID","","",3,null],[13,"RD_KAFKA_CONF_OK","","",3,null],[0,"client","rdkafka","Common client functionalities.",null,null],[3,"DefaultClientContext","rdkafka::client","An empty `ClientContext` that can be used when no context is needed. Default callback implementations will be used.",null,null],[3,"NativeClient","","A native rdkafka-sys client. This struct shouldn't be used directly. Use higher level `Client` or producers and consumers.",null,null],[3,"Client","","A low level rdkafka client. This client shouldn't be used directly. The producer and consumer modules provide different producer and consumer implementations based on top of `Client` that can be used instead.",null,null],[8,"ClientContext","","Client-level context",null,null],[11,"log","","Receives log lines from librdkafka.",4,{"inputs":[{"name":"self"},{"name":"rdkafkaloglevel"},{"name":"str"},{"name":"str"}],"output":null}],[11,"stats","","Receives the statistics of the librdkafka client. To enable, the \"statistics.interval.ms\" configuration parameter must be specified.",4,{"inputs":[{"name":"self"},{"name":"statistics"}],"output":null}],[11,"error","","Receives global errors from the librdkafka client.",4,{"inputs":[{"name":"self"},{"name":"kafkaerror"},{"name":"str"}],"output":null}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"defaultclientcontext"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"defaultclientcontext"}}],[11,"from_ptr","","Wraps a pointer to an RDKafka object and returns a new NativeClient.",6,null],[11,"ptr","","Returns the wrapped pointer to RDKafka.",6,null],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new `Client` given a configuration, a client type and a context.",7,{"inputs":[{"name":"clientconfig"},{"name":"nativeclientconfig"},{"name":"rdkafkatype"},{"name":"c"}],"output":{"generics":["client"],"name":"kafkaresult"}}],[11,"native_client","","Returns a reference to the native rdkafka-sys client.",7,{"inputs":[{"name":"self"}],"output":{"name":"nativeclient"}}],[11,"native_ptr","","Returns a pointer to the native rdkafka-sys client.",7,null],[11,"context","","Returns a reference to the context.",7,{"inputs":[{"name":"self"}],"output":{"name":"c"}}],[11,"fetch_metadata","","Returns the metadata information for the specified topic, or for all topics in the cluster if no topic is specified.",7,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"t"}],"output":{"generics":["metadata"],"name":"kafkaresult"}}],[11,"fetch_watermarks","","Returns high and low watermark for the specified topic and partition.",7,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"t"}],"output":{"name":"kafkaresult"}}],[11,"fetch_group_list","","Returns the group membership information for the given group. If no group is specified, all groups will be returned.",7,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"t"}],"output":{"generics":["grouplist"],"name":"kafkaresult"}}],[0,"config","rdkafka","Producer and consumer configuration.",null,null],[3,"NativeClientConfig","rdkafka::config","A native rdkafka-sys client config.",null,null],[3,"ClientConfig","","Client configuration.",null,null],[12,"log_level","","The librdkafka logging level. Refer to `RDKafkaLogLevel` for the list of available levels.",8,null],[4,"RDKafkaLogLevel","","The log levels supported by librdkafka.",null,null],[13,"Emerg","","Higher priority then LogLevel::Error from the log crate.",9,null],[13,"Alert","","Higher priority then LogLevel::Error from the log crate.",9,null],[13,"Critical","","Higher priority then LogLevel::Error from the log crate.",9,null],[13,"Error","","Equivalent to LogLevel::Error from the log crate.",9,null],[13,"Warning","","Equivalent to LogLevel::Warning from the log crate.",9,null],[13,"Notice","","Higher priority then LogLevel::Info from the log crate.",9,null],[13,"Info","","Equivalent to LogLevel::Info from the log crate.",9,null],[13,"Debug","","Equivalent to LogLevel::Debug from the log crate.",9,null],[8,"FromClientConfig","","Create a new client based on the provided configuration.",null,null],[10,"from_config","","Create a client from client configuration. The default client context will be used.",10,{"inputs":[{"name":"clientconfig"}],"output":{"name":"kafkaresult"}}],[8,"FromClientConfigAndContext","","Create a new client based on the provided configuration and context.",null,null],[10,"from_config_and_context","","Create a client from client configuration and a client context.",11,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"rdkafkaloglevel"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ptr","","Wraps a pointer to an `RDKafkaConfig` object and returns a new `NativeClientConfig`.",12,null],[11,"ptr","","Returns the pointer to the librdkafka RDKafkaConf structure.",12,null],[11,"ptr_move","","Returns the pointer to the librdkafka RDKafkaConf structure. This method should be used when the native pointer is intended to be moved. The destructor won't be executed automatically; the caller should take care of deallocating the resource when no longer needed.",12,null],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"clientconfig"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates a new empty configuration.",8,{"inputs":[],"output":{"name":"clientconfig"}}],[11,"set","","Sets a new parameter in the configuration.",8,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"clientconfig"}}],[11,"set_log_level","","Sets the log level of the client. If not specified, the log level will be calculated based on the global log level of the log crate.",8,{"inputs":[{"name":"self"},{"name":"rdkafkaloglevel"}],"output":{"name":"clientconfig"}}],[11,"create_native_config","","Returns the native rdkafka-sys configuration.",8,{"inputs":[{"name":"self"}],"output":{"generics":["nativeclientconfig"],"name":"kafkaresult"}}],[11,"create","","Uses the current configuration to create a new Consumer or Producer.",8,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"create_with_context","","Uses the current configuration and the provided context to create a new Consumer or Producer.",8,{"inputs":[{"name":"self"},{"name":"c"}],"output":{"name":"kafkaresult"}}],[0,"consumer","rdkafka","Base trait and common functionality for all consumers.",null,null],[3,"DefaultConsumerContext","rdkafka::consumer","An empty consumer context that can be user when no context is needed.",null,null],[4,"Rebalance","","Rebalance information.",null,null],[13,"Assign","","A new partition assignment is received.",13,null],[13,"Revoke","","All partitions are revoked.",13,null],[13,"Error","","Unexpected error from Kafka.",13,null],[4,"CommitMode","","Specifies if the commit should be performed synchronously or asynchronously.",null,null],[13,"Sync","","Synchronous commit.",14,null],[13,"Async","","Asynchronous commit.",14,null],[0,"base_consumer","","Low level consumer wrapper.",null,null],[3,"BaseConsumer","rdkafka::consumer::base_consumer","Low level wrapper around the librdkafka consumer. This consumer requires to be periodically polled to make progress on rebalance, callbacks and to receive messages.",null,null],[3,"Iter","","Iterator for more convenient interface.",null,null],[11,"from_config","","",15,{"inputs":[{"name":"clientconfig"}],"output":{"generics":["baseconsumer"],"name":"kafkaresult"}}],[11,"from_config_and_context","","",15,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"generics":["baseconsumer"],"name":"kafkaresult"}}],[11,"poll","","Polls the consumer for new messages.",15,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["kafkaresult"],"name":"option"}}],[11,"iter","","Returns an iterator over the available messages.",15,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"get_base_consumer","","",15,{"inputs":[{"name":"self"}],"output":{"name":"baseconsumer"}}],[11,"subscribe","","",15,null],[11,"unsubscribe","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"assign","","",15,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"}],"output":{"name":"kafkaresult"}}],[11,"commit","","",15,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"commit_consumer_state","","",15,{"inputs":[{"name":"self"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"commit_message","","",15,{"inputs":[{"name":"self"},{"name":"borrowedmessage"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"store_offset","","",15,{"inputs":[{"name":"self"},{"name":"borrowedmessage"}],"output":{"name":"kafkaresult"}}],[11,"subscription","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"assignment","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"committed","","",15,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"offsets_for_timestamp","","",15,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"t"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"position","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"fetch_metadata","","",15,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"t"}],"output":{"generics":["metadata"],"name":"kafkaresult"}}],[11,"fetch_watermarks","","",15,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"t"}],"output":{"name":"kafkaresult"}}],[11,"fetch_group_list","","",15,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"t"}],"output":{"generics":["grouplist"],"name":"kafkaresult"}}],[11,"drop","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"next","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"stream_consumer","rdkafka::consumer","Stream-based consumer implementation.",null,null],[3,"MessageStream","rdkafka::consumer::stream_consumer","A Kafka consumer implementing Stream.",null,null],[3,"StreamConsumer","","A Kafka Consumer providing a `futures::Stream` interface.",null,null],[11,"poll","","",17,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"get_base_consumer","","",18,{"inputs":[{"name":"self"}],"output":{"name":"baseconsumer"}}],[11,"from_config","","",18,{"inputs":[{"name":"clientconfig"}],"output":{"generics":["streamconsumer"],"name":"kafkaresult"}}],[11,"from_config_and_context","","",18,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"generics":["streamconsumer"],"name":"kafkaresult"}}],[11,"start","","Starts the StreamConsumer with default configuration (100ms polling interval and no `NoMessageReceived` notifications).",18,{"inputs":[{"name":"self"}],"output":{"name":"messagestream"}}],[11,"start_with","","Starts the StreamConsumer with the specified poll interval. Additionally, if `no_message_error` is set to true, it will return an error of type `KafkaError::NoMessageReceived` every time the poll interval is reached and no message has been received.",18,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"bool"}],"output":{"name":"messagestream"}}],[11,"stop","","Stops the StreamConsumer, blocking the caller until the internal consumer has been stopped.",18,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",18,{"inputs":[{"name":"self"}],"output":null}],[8,"ConsumerContext","rdkafka::consumer","Consumer specific Context. This user-defined object can be used to provide custom callbacks to consumer events. Refer to the list of methods to check which callbacks can be specified.",null,null],[11,"rebalance","","Implements the default rebalancing strategy and calls the `pre_rebalance` and `post_rebalance` methods. If this method is overridden, it will be responsibility of the user to call them if needed.",19,{"inputs":[{"name":"self"},{"name":"nativeclient"},{"name":"rdkafkaresperr"},{"name":"topicpartitionlist"}],"output":null}],[11,"pre_rebalance","","Pre-rebalance callback. This method will run before the rebalance and should terminate its execution quickly.",19,{"inputs":[{"name":"self"},{"name":"rebalance"}],"output":null}],[11,"post_rebalance","","Post-rebalance callback. This method will run after the rebalance and should terminate its execution quickly.",19,{"inputs":[{"name":"self"},{"name":"rebalance"}],"output":null}],[11,"commit_callback","","Post commit callback. This method will run after a group of offsets was committed to the offset store.",19,null],[8,"Consumer","","Common trait for all consumers.",null,null],[10,"get_base_consumer","","Returns a reference to the BaseConsumer.",20,{"inputs":[{"name":"self"}],"output":{"name":"baseconsumer"}}],[11,"subscribe","","Subscribe the consumer to a list of topics.",20,null],[11,"unsubscribe","","Unsubscribe the current subscription list.",20,{"inputs":[{"name":"self"}],"output":null}],[11,"assign","","Manually assign topics and partitions to the consumer. If used, automatic consumer rebalance won't be activated.",20,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"}],"output":{"name":"kafkaresult"}}],[11,"commit","","Commits the offset of the specified message. The commit can be sync (blocking), or async. Notice that when a specific offset is committed, all the previous offsets are considered committed as well. Use this method only if you are processing messages in order.",20,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"commit_consumer_state","","Commit the current consumer state. Notice that if the consumer fails after a message has been received, but before the message has been processed by the user code, this might lead to data loss. Check the \"at-least-once delivery\" section in the readme for more information.",20,{"inputs":[{"name":"self"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"commit_message","","Commit the provided message. Note that this will also automatically commit every message with lower offset within the same partition.",20,{"inputs":[{"name":"self"},{"name":"borrowedmessage"},{"name":"commitmode"}],"output":{"name":"kafkaresult"}}],[11,"store_offset","","Store offset for this message to be used on the next (auto)commit. When using this `enable.auto.offset.store` should be set to `false` in the config.",20,{"inputs":[{"name":"self"},{"name":"borrowedmessage"}],"output":{"name":"kafkaresult"}}],[11,"subscription","","Returns the current topic subscription.",20,{"inputs":[{"name":"self"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"assignment","","Returns the current partition assignment.",20,{"inputs":[{"name":"self"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"committed","","Retrieve committed offsets for topics and partitions.",20,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"offsets_for_timestamp","","Lookup the offsets for this consumer's partitions by timestamp.",20,{"inputs":[{"name":"self"},{"name":"i64"},{"name":"t"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"position","","Retrieve current positions (offsets) for topics and partitions.",20,{"inputs":[{"name":"self"}],"output":{"generics":["topicpartitionlist"],"name":"kafkaresult"}}],[11,"fetch_metadata","","Returns the metadata information for the specified topic, or for all topics in the cluster if no topic is specified.",20,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"t"}],"output":{"generics":["metadata"],"name":"kafkaresult"}}],[11,"fetch_watermarks","","Returns the metadata information for all the topics in the cluster.",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"t"}],"output":{"name":"kafkaresult"}}],[11,"fetch_group_list","","Returns the group membership information for the given group. If no group is specified, all groups will be returned.",20,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"t"}],"output":{"generics":["grouplist"],"name":"kafkaresult"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"rebalance"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"defaultconsumercontext"}}],[0,"error","rdkafka","Error manipulations.",null,null],[4,"RDKafkaError","rdkafka::error","Errors enum Error from the underlying rdkafka library.",null,null],[13,"BadMessage","","Received message is incorrect",0,null],[13,"BadCompression","","Bad/unknown compression",0,null],[13,"BrokerDestroy","","Broker is going away",0,null],[13,"Fail","","Generic failure",0,null],[13,"BrokerTransportFailure","","Broker transport failure",0,null],[13,"CriticalSystemResource","","Critical system resource",0,null],[13,"Resolve","","Failed to resolve broker",0,null],[13,"MessageTimedOut","","Produced message timed out",0,null],[13,"PartitionEOF","","Reached the end of the topic+partition queue on the broker. Not really an error.",0,null],[13,"UnknownPartition","","Permanent: Partition does not exist in cluster.",0,null],[13,"FileSystem","","File or filesystem error",0,null],[13,"UnknownTopic","","Permanent: Topic does not exist in cluster.",0,null],[13,"AllBrokersDown","","All broker connections are down.",0,null],[13,"InvalidArgument","","Invalid argument, or invalid configuration",0,null],[13,"OperationTimedOut","","Operation timed out",0,null],[13,"QueueFull","","Queue is full",0,null],[13,"ISRInsufficient","","ISR count < required.acks",0,null],[13,"NodeUpdate","","Broker node update",0,null],[13,"SSL","","SSL error",0,null],[13,"WaitingForCoordinator","","Waiting for coordinator to become available.",0,null],[13,"UnknownGroup","","Unknown client group",0,null],[13,"InProgress","","Operation in progress",0,null],[13,"PreviousInProgress","","Previous operation in progress, wait for it to finish.",0,null],[13,"ExistingSubscription","","This operation would interfere with an existing subscription",0,null],[13,"AssignPartitions","","Assigned partitions (rebalance_cb)",0,null],[13,"RevokePartitions","","Revoked partitions (rebalance_cb)",0,null],[13,"Conflict","","Conflicting use",0,null],[13,"State","","Wrong state",0,null],[13,"UnknownProtocol","","Unknown protocol",0,null],[13,"NotImplemented","","Not implemented",0,null],[13,"Authentication","","Authentication failure",0,null],[13,"NoOffset","","No stored offset",0,null],[13,"Outdated","","Outdated",0,null],[13,"TimedOutQueue","","Timed out in queue",0,null],[13,"UnsupportedFeature","","Feature not supported by broker",0,null],[13,"WaitCache","","Awaiting cache update",0,null],[13,"Interrupted","","Operation interrupted (e.g., due to yield))",0,null],[13,"KeySerialization","","Key serialization error",0,null],[13,"ValueSerialization","","Value serialization error",0,null],[13,"KeyDeserialization","","Key deserialization error",0,null],[13,"ValueDeserialization","","Value deserialization error",0,null],[13,"Partial","","Partial response",0,null],[13,"Unknown","","Unknown broker error",0,null],[13,"NoError","","Success",0,null],[13,"OffsetOutOfRange","","Offset out of range",0,null],[13,"InvalidMessage","","Invalid message",0,null],[13,"UnknownTopicOrPartition","","Unknown topic or partition",0,null],[13,"InvalidMessageSize","","Invalid message size",0,null],[13,"LeaderNotAvailable","","Leader not available",0,null],[13,"NotLeaderForPartition","","Not leader for partition",0,null],[13,"RequestTimedOut","","Request timed out",0,null],[13,"BrokerNotAvailable","","Broker not available",0,null],[13,"ReplicaNotAvailable","","Replica not available",0,null],[13,"MessageSizeTooLarge","","Message size too large",0,null],[13,"StaleControllerEpoch","","Stale controller epoch code",0,null],[13,"OffsetMetadataTooLarge","","Offset metadata string too large",0,null],[13,"NetworkException","","Broker disconnected before response received",0,null],[13,"GroupLoadInProgress","","Group coordinator load in progress",0,null],[13,"GroupCoordinatorNotAvailable","","Group coordinator not available",0,null],[13,"NotCoordinatorForGroup","","Not coordinator for group",0,null],[13,"InvalidTopic","","Invalid topic",0,null],[13,"MessageBatchTooLarge","","Message batch larger than configured server segment size",0,null],[13,"NotEnoughReplicas","","Not enough in-sync replicas",0,null],[13,"NotEnoughReplicasAfterAppend","","Message(s) written to insufficient number of in-sync replicas",0,null],[13,"InvalidRequiredAcks","","Invalid required acks value",0,null],[13,"IllegalGeneration","","Specified group generation id is not valid",0,null],[13,"InconsistentGroupProtocol","","Inconsistent group protocol",0,null],[13,"InvalidGroupId","","Invalid group.id",0,null],[13,"UnknownMemberId","","Unknown member",0,null],[13,"InvalidSessionTimeout","","Invalid session timeout",0,null],[13,"RebalanceInProgress","","Group rebalance in progress",0,null],[13,"InvalidCommitOffsetSize","","Commit offset data size is not valid",0,null],[13,"TopicAuthorizationFailed","","Topic authorization failed",0,null],[13,"GroupAuthorizationFailed","","Group authorization failed",0,null],[13,"ClusterAuthorizationFailed","","Cluster authorization failed",0,null],[13,"InvalidTimestamp","","Invalid timestamp",0,null],[13,"UnsupportedSASLMechanism","","Unsupported SASL mechanism",0,null],[13,"IllegalSASLState","","Illegal SASL state",0,null],[13,"UnsupportedVersion","","Unsupported version",0,null],[13,"TopicAlreadyExists","","Topic already exists",0,null],[13,"InvalidPartitions","","Invalid number of partitions",0,null],[13,"InvalidReplicationFactor","","Invalid replication factor",0,null],[13,"InvalidReplicaAssignment","","Invalid replica assignment",0,null],[13,"InvalidConfig","","Invalid config */",0,null],[13,"NotController","","Not controller for cluster",0,null],[13,"InvalidRequest","","Invalid request",0,null],[13,"UnsupportedForMessageFormat","","Message format on broker does not support request",0,null],[13,"PolicyViolation","","Policy violation",0,null],[13,"OutOfOrderSequenceNumber","","Broker received an out of order sequence number",0,null],[13,"DuplicateSequenceNumber","","Broker received a duplicate sequence number",0,null],[13,"InvalidProducerEpoch","","Producer attempted an operation with an old epoch",0,null],[13,"InvalidTransactionalState","","Producer attempted a transactional operation in an invalid state",0,null],[13,"InvalidProducerIdMapping","","Producer attempted to use a producer id which is currently assigned to its transactional id",0,null],[13,"InvalidTransactionTimeout","","Transaction timeout is larger than the maxi value allowed by the broker's max.transaction.timeout.ms",0,null],[13,"ConcurrentTransactions","","Producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing",0,null],[13,"TransactionCoordinatorFenced","","Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer",0,null],[13,"TransactionalIdAuthorizationFailed","","Transactional Id authorization failed",0,null],[13,"SecurityDisabled","","Security features are disabled",0,null],[13,"OperationNotAttempted","","Operation not attempted",0,null],[4,"KafkaError","","Represents all Kafka errors. Check the underlying `RDKafkaError` to get details.",null,null],[13,"ClientConfig","","Invalid client configuration.",22,null],[13,"ClientCreation","","Client creation failed.",22,null],[13,"ConsumerCommit","","Consumer commit failed.",22,null],[13,"Global","","Global error.",22,null],[13,"GroupListFetch","","Group list fetch failed.",22,null],[13,"MessageConsumption","","Message consumption failed.",22,null],[13,"MessageProduction","","Message production error.",22,null],[13,"MetadataFetch","","Metadata fetch error.",22,null],[13,"NoMessageReceived","","No message was received.",22,null],[13,"Nul","","Unexpected null pointer",22,null],[13,"OffsetFetch","","Offset fetch failed.",22,null],[13,"PartitionEOF","","Ond of partition reached.",22,null],[13,"SetPartitionOffset","","Setting partition offset failed.",22,null],[13,"StoreOffset","","Offset store failed.",22,null],[13,"Subscription","","Subscription creation failed.",22,null],[6,"KafkaResult","","Kafka result.",null,null],[8,"IsError","","Verify if the value represents an error condition.",null,null],[10,"is_error","","Return true if the value represents an error.",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_error","rdkafka::types","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_error","","",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","rdkafka::error","",22,{"inputs":[{"name":"self"}],"output":{"name":"kafkaerror"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"kafkaerror"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"kafkaerror"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",22,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",22,{"inputs":[{"name":"nulerror"}],"output":{"name":"kafkaerror"}}],[0,"groups","rdkafka","Group membership API.",null,null],[3,"GroupMemberInfo","rdkafka::groups","Group member information container.",null,null],[3,"GroupInfo","","Group information container.",null,null],[3,"GroupList","","List of groups. This structure wraps the  pointer returned by rdkafka-sys, and deallocates all the native resources when dropped.",null,null],[11,"id","","Return the id of the member.",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"client_id","","Return the client id of the member.",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"client_host","","Return the client host of the member.",24,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"metadata","","Return the metadata of the member",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"assignment","","Return the assignment of the member",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"name","","Return the name of the group.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"members","","Returns the members of the group.",25,null],[11,"state","","Returns the state of the group.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"protocol","","Returns the protocol of the group.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"protocol_type","","Returns the protocol type of the group.",25,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ptr","","Creates a new group list given a pointer to the native rdkafka-sys group list structure.",26,null],[11,"groups","","Returns all the groups in the list.",26,null],[11,"drop","","",26,{"inputs":[{"name":"self"}],"output":null}],[0,"message","rdkafka","Store and manipulate Kafka messages.",null,null],[3,"BorrowedMessage","rdkafka::message","A zero-copy Kafka message.",null,null],[3,"OwnedMessage","","An `OwnedMessage` can be created from a `BorrowedMessage` using the `detach` method. `OwnedMessage`s don't hold any reference to the consumer, and don't use any memory inside the consumer buffer.",null,null],[4,"Timestamp","","Timestamp of a message",null,null],[13,"NotAvailable","","Timestamp not available",27,null],[13,"CreateTime","","Message creation time",27,null],[13,"LogAppendTime","","Log append time",27,null],[6,"DeliveryResult","","The result of a message production.",null,null],[8,"Message","","The `Message` trait provides access to the fields of a generic Kafka message.",null,null],[10,"key","","Returns the key of the message, or None if there is no key.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"payload","","Returns the payload of the message, or None if there is no payload.",28,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"topic","","Returns the source topic of the message.",28,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[10,"partition","","Returns the partition number where the message is stored.",28,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"offset","","Returns the offset of the message.",28,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"timestamp","","Returns the message timestamp for a consumed message if available.",28,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"payload_view","","Converts the raw bytes of the payload to a reference of the specified type, that points to the same data inside the message and without performing any memory allocation",28,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[11,"key_view","","Converts the raw bytes of the key to a reference of the specified type, that points to the same data inside the message and without performing any memory allocation",28,{"inputs":[{"name":"self"}],"output":{"generics":["result"],"name":"option"}}],[8,"FromBytes","","Given a reference to a byte array, returns a different view of the same data. No copy of the data should be performed.",null,null],[16,"Error","","The error type that will be used whenever the conversion fails.",29,null],[10,"from_bytes","","Tries to convert the provided byte slice into a different type.",29,null],[8,"ToBytes","","Given some data, returns the byte representation of that data. No copy of the data should be performed.",null,null],[10,"to_bytes","","Convert the provided data to bytes.",30,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"timestamp"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"timestamp"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"to_millis","","Convert the timestamp to milliseconds since epoch.",27,{"inputs":[{"name":"self"}],"output":{"generics":["i64"],"name":"option"}}],[11,"now","","Creates a new `Timestamp::CreateTime` representing the current time.",27,{"inputs":[],"output":{"name":"timestamp"}}],[11,"from","","",27,{"inputs":[{"name":"i64"}],"output":{"name":"timestamp"}}],[11,"from","","",27,{"inputs":[{"name":"systemtime"}],"output":{"name":"timestamp"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_consumer","","Creates a new `BorrowedMessage` that wraps the native Kafka message pointer returned by a consumer. The lifetime of the message will be bound to the lifetime of the consumer passed as parameter. This method should only be used with messages coming from consumers. If the message contains an error, only the error is returned and the message structure is freed.",31,null],[11,"from_dr_callback","","Creates a new `BorrowedMessage` that wraps the native Kafka message pointer returned by the delivery callback of a producer. The lifetime of the message will be bound to the lifetime of the reference passed as parameter. This method should only be used with messages coming from the delivery callback. The message will not be freed in any circumstance.",31,null],[11,"ptr","","Returns a pointer to the RDKafkaMessage.",31,null],[11,"topic_ptr","","Returns a pointer to the message's RDKafkaTopic",31,null],[11,"key_len","","Returns the length of the key field of the message.",31,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"payload_len","","Returns the length of the payload field of the message.",31,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"detach","","Clones the content of the `BorrowedMessage` and returns an `OwnedMessage`, that can outlive the consumer. This operation requires memory allocation and can be expensive.",31,{"inputs":[{"name":"self"}],"output":{"name":"ownedmessage"}}],[11,"key","","",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"payload","","",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"topic","","",31,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"partition","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"offset","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"timestamp","","",31,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[11,"drop","","",31,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new message with the specified content. Mainly useful for writing tests.",32,{"inputs":[{"generics":["vec"],"name":"option"},{"generics":["vec"],"name":"option"},{"name":"string"},{"name":"timestamp"},{"name":"i32"},{"name":"i64"}],"output":{"name":"ownedmessage"}}],[11,"key","","",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"payload","","",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"topic","","",32,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"partition","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"offset","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"timestamp","","",32,{"inputs":[{"name":"self"}],"output":{"name":"timestamp"}}],[0,"metadata","rdkafka","Cluster metadata.",null,null],[3,"MetadataBroker","rdkafka::metadata","Broker metadata information.",null,null],[3,"MetadataPartition","","Partition metadata information.",null,null],[3,"MetadataTopic","","Topic metadata information.",null,null],[3,"Metadata","","Metadata container. This structure wraps the metadata pointer returned by rdkafka-sys, and deallocates all the native resources when dropped.",null,null],[11,"id","","Returns the id of the broker.",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"host","","Returns the host name of the broker.",33,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"port","","Returns the port of the broker.",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"id","","Returns the id of the partition.",34,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"leader","","Returns the broker id of the leader broker for the partition.",34,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"error","","Returns the metadata error for the partition, or None if there is no error.",34,{"inputs":[{"name":"self"}],"output":{"generics":["rdkafkaresperr"],"name":"option"}}],[11,"replicas","","Returns the broker ids of the replicas.",34,null],[11,"isr","","Returns the broker ids of the in sync replicas.",34,null],[11,"name","","Returns the name of the topic.",35,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"partitions","","Returns the partition metadata information for all the partitions.",35,null],[11,"error","","Returns the metadata error, or None if there was no error.",35,{"inputs":[{"name":"self"}],"output":{"generics":["rdkafkaresperr"],"name":"option"}}],[11,"from_ptr","","Creates a new Metadata container given a pointer to the native rdkafka-sys metadata.",36,null],[11,"orig_broker_id","","Returns the id of the broker originating this metadata.",36,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"orig_broker_name","","Returns the hostname of the broker originating this metadata.",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"brokers","","Returns the metadata information for all the brokers in the cluster.",36,null],[11,"topics","","Returns the metadata information for all the topics in the cluster.",36,null],[11,"drop","","",36,{"inputs":[{"name":"self"}],"output":null}],[0,"producer","rdkafka","Low level and high level rdkafka producers.",null,null],[0,"base_producer","rdkafka::producer","Low level Kafka producers.",null,null],[3,"DefaultProducerContext","rdkafka::producer::base_producer","Default producer context that can be use when a custom context is not required.",null,null],[3,"BaseProducer","","Low level Kafka producer.",null,null],[3,"ThreadedProducer","","A producer with a separate thread for event handling.",null,null],[8,"ProducerContext","","A `ProducerContext` is a `Context` specific for producers. It can be used to store user-specified callbacks, such as `delivery`.",null,null],[16,"DeliveryOpaque","","A `DeliveryOpaque` is a user-defined structure that will be passed to the producer when producing a message, and returned to the `delivery` method once the message has been delivered, or failed to.",37,null],[10,"delivery","","This method will be called once the message has been delivered (or failed to). The `DeliveryOpaque` will be the one provided by the user when calling send.",37,null],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"defaultproducercontext"}}],[11,"delivery","","",38,null],[11,"from_config","","Creates a new `BaseProducer` starting from a configuration.",39,{"inputs":[{"name":"clientconfig"}],"output":{"generics":["baseproducer"],"name":"kafkaresult"}}],[11,"from_config_and_context","","Creates a new `BaseProducer` starting from a configuration and a context.",39,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"generics":["baseproducer"],"name":"kafkaresult"}}],[11,"poll","","Polls the producer. Regular calls to `poll` are required to process the events and execute the message delivery callbacks.",39,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[11,"send_copy","","Sends a copy of the payload and key provided to the specified topic. When no partition is specified the underlying Kafka library picks a partition based on the key. If no key is specified, a random partition will be used. Note that some errors will cause an error to be returned straight-away, such as partition not defined, while others will be returned in the delivery callback. To correctly handle errors, the delivery callback should be implemented.",39,null],[11,"flush","","Flushes the producer. Should be called before termination.",39,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"in_flight_count","","Returns the number of messages waiting to be sent, or send but not acknowledged yet.",39,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"baseproducer"}}],[11,"from_config","","",40,{"inputs":[{"name":"clientconfig"}],"output":{"generics":["threadedproducer"],"name":"kafkaresult"}}],[11,"from_config_and_context","","",40,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"generics":["threadedproducer"],"name":"kafkaresult"}}],[11,"send_copy","","Sends a message to Kafka. See the documentation in `BaseProducer`.",40,null],[11,"poll","","Polls the internal producer. This is not normally required since the `ThreadedProducer` had a thread dedicated to calling `poll` regularly.",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"flush","","Flushes the producer. Should be called before termination.",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"in_flight_count","","Returns the number of messages waiting to be sent, or send but not acknowledged yet.",40,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"drop","","",40,{"inputs":[{"name":"self"}],"output":null}],[0,"future_producer","rdkafka::producer","Future producer",null,null],[3,"FutureProducer","rdkafka::producer::future_producer","A producer that returns a `Future` for every message being produced.",null,null],[3,"DeliveryFuture","","A `Future` wrapping the result of the message production.",null,null],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"futureproducer"}}],[11,"from_config","","",41,{"inputs":[{"name":"clientconfig"}],"output":{"generics":["futureproducer"],"name":"kafkaresult"}}],[11,"from_config_and_context","","",41,{"inputs":[{"name":"clientconfig"},{"name":"c"}],"output":{"generics":["futureproducer"],"name":"kafkaresult"}}],[11,"poll","","",42,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"send_copy","","Sends a copy of the payload and key provided to the specified topic. When no partition is specified the underlying Kafka library picks a partition based on the key, or a random one if the key is not specified. Returns a `DeliveryFuture` that will eventually contain the result of the send. The `block_ms` parameter will control for how long the producer is allowed to block if the queue is full. Set it to -1 to block forever, or 0 to never block. If `block_ms` is reached and the queue is still full, a `RDKafkaError::QueueFull` will be reported in the `DeliveryFuture`.",41,{"inputs":[{"name":"self"},{"name":"str"},{"generics":["i32"],"name":"option"},{"name":"option"},{"name":"option"},{"generics":["i64"],"name":"option"},{"name":"i64"}],"output":{"name":"deliveryfuture"}}],[11,"send_copy_result","","Sends a copy of the payload and key provided to the specified topic. This works the same way as `send_copy`, the only difference is that it returns an error if enqueuing fails.",41,{"inputs":[{"name":"self"},{"name":"str"},{"generics":["i32"],"name":"option"},{"name":"option"},{"name":"option"},{"generics":["i64"],"name":"option"}],"output":{"generics":["deliveryfuture"],"name":"kafkaresult"}}],[11,"poll","","Polls the internal producer. This is not normally required since the `ThreadedProducer` had a thread dedicated to calling `poll` regularly.",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"flush","","Flushes the producer. Should be called before termination.",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"in_flight_count","","Returns the number of messages waiting to be sent, or send but not acknowledged yet.",41,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[0,"statistics","rdkafka","",null,null],[3,"Statistics","rdkafka::statistics","Statistics from librdkafka. Refer to the librdkafka documentation for details.",null,null],[12,"name","","",43,null],[12,"client_type","","",43,null],[12,"ts","","",43,null],[12,"time","","",43,null],[12,"replyq","","",43,null],[12,"msg_cnt","","",43,null],[12,"msg_size","","",43,null],[12,"msg_max","","",43,null],[12,"msg_size_max","","",43,null],[12,"simple_cnt","","",43,null],[12,"brokers","","",43,null],[12,"topics","","",43,null],[12,"cgrp","","",43,null],[3,"Broker","","",null,null],[12,"name","","",44,null],[12,"nodeid","","",44,null],[12,"state","","",44,null],[12,"stateage","","",44,null],[12,"outbuf_cnt","","",44,null],[12,"outbuf_msg_cnt","","",44,null],[12,"waitresp_cnt","","",44,null],[12,"waitresp_msg_cnt","","",44,null],[12,"tx","","",44,null],[12,"txbytes","","",44,null],[12,"txerrs","","",44,null],[12,"txretries","","",44,null],[12,"req_timeouts","","",44,null],[12,"rx","","",44,null],[12,"rxbytes","","",44,null],[12,"rxerrs","","",44,null],[12,"rxcorriderrs","","",44,null],[12,"rxpartial","","",44,null],[12,"zbuf_grow","","",44,null],[12,"buf_grow","","",44,null],[12,"wakeups","","",44,null],[12,"int_latency","","",44,null],[12,"rtt","","",44,null],[12,"throttle","","",44,null],[12,"toppars","","",44,null],[3,"Window","","",null,null],[12,"min","","",45,null],[12,"max","","",45,null],[12,"avg","","",45,null],[12,"sum","","",45,null],[12,"cnt","","",45,null],[3,"TopicPartition","","",null,null],[12,"topic","","",46,null],[12,"partition","","",46,null],[3,"Topic","","",null,null],[12,"topic","","",47,null],[12,"metadata_age","","",47,null],[12,"partitions","","",47,null],[3,"Partition","","",null,null],[12,"partition","","",48,null],[12,"leader","","",48,null],[12,"desired","","",48,null],[12,"unknown","","",48,null],[12,"msgq_cnt","","",48,null],[12,"msgq_bytes","","",48,null],[12,"xmit_msgq_cnt","","",48,null],[12,"xmit_msgq_bytes","","",48,null],[12,"fetchq_cnt","","",48,null],[12,"fetchq_size","","",48,null],[12,"fetch_state","","",48,null],[12,"query_offset","","",48,null],[12,"next_offset","","",48,null],[12,"app_offset","","",48,null],[12,"stored_offset","","",48,null],[12,"committed_offset","","",48,null],[12,"eof_offset","","",48,null],[12,"lo_offset","","",48,null],[12,"hi_offset","","",48,null],[12,"consumer_lag","","",48,null],[12,"txmsgs","","",48,null],[12,"txbytes","","",48,null],[12,"msgs","","",48,null],[12,"rx_ver_drops","","",48,null],[3,"ConsumerGroup","","",null,null],[12,"rebalance_age","","",49,null],[12,"rebalance_cnt","","",49,null],[12,"assignment_size","","",49,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"topic_partition_list","rdkafka","A data structure representing topic, partitions and offsets, compatible with the `RDKafkaTopicPartitionList` exported by `rdkafka-sys`.",null,null],[3,"TopicPartitionListElem","rdkafka::topic_partition_list","One element of the topic partition list.",null,null],[3,"TopicPartitionList","","A structure to store and manipulate a list of topics and partitions with optional offsets.",null,null],[4,"Offset","","A librdkafka offset.",null,null],[13,"Beginning","","Start consuming from the beginning of the partition.",50,null],[13,"End","","Start consuming from the end of the partition.",50,null],[13,"Stored","","Start consuming from the stored offset.",50,null],[13,"Invalid","","Offset not assigned or invalid.",50,null],[13,"Offset","","A specific offset to consume from.",50,null],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"from_raw","","Converts the integer representation of an offset use by librdkafka to an `Offset`.",50,{"inputs":[{"name":"i64"}],"output":{"name":"offset"}}],[11,"to_raw","","Converts the `Offset` to the internal integer representation used by librdkafka.",50,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"topic","","Returns the topic name.",51,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"error","","Returns the optional error associated to the specific entry in the TPL.",51,{"inputs":[{"name":"self"}],"output":{"name":"kafkaresult"}}],[11,"partition","","Returns the partition number.",51,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"offset","","Returns the offset.",51,{"inputs":[{"name":"self"}],"output":{"name":"offset"}}],[11,"set_offset","","Sets the offset.",51,{"inputs":[{"name":"self"},{"name":"offset"}],"output":null}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"topicpartitionlistelem"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","","Creates a new empty list with default capacity.",52,{"inputs":[],"output":{"name":"topicpartitionlist"}}],[11,"with_capacity","","Creates a new empty list with the specified capacity.",52,{"inputs":[{"name":"usize"}],"output":{"name":"topicpartitionlist"}}],[11,"from_ptr","","Transforms a pointer to the native librdkafka RDTopicPartitionList into a managed `TopicPartitionList` instance.",52,null],[11,"from_topic_map","","Given a topic map, generates a new `TopicPartitionList`.",52,{"inputs":[{"name":"hashmap"}],"output":{"name":"topicpartitionlist"}}],[11,"ptr","","Returns the pointer to the internal librdkafka structure.",52,null],[11,"leak","","Capture the instance without calling the destructor on the internal librdkafka structure.",52,{"inputs":[{"name":"self"}],"output":null}],[11,"count","","Returns the number of elements in the list.",52,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"capacity","","Returns the capacity of the list.",52,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"add_topic_unassigned","","Adds a topic with unassigned partitions to the list.",52,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"topicpartitionlistelem"}}],[11,"add_partition","","Adds a topic and partition to the list.",52,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"topicpartitionlistelem"}}],[11,"add_partition_range","","Adds a topic and partition range to the list.",52,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_partition_offset","","Sets the offset for an already created topic partition. It will fail if the topic partition isn't in the list.",52,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"offset"}],"output":{"name":"kafkaresult"}}],[11,"add_partition_offset","","Adds a topic and partition to the list, with the specified offset.",52,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"offset"}],"output":null}],[11,"find_partition","","Given a topic name and a partition number, returns the corresponding list element.",52,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"generics":["topicpartitionlistelem"],"name":"option"}}],[11,"set_all_offsets","","Sets all partitions in the list to the specified offset.",52,{"inputs":[{"name":"self"},{"name":"offset"}],"output":null}],[11,"elements","","Returns all the elements of the list.",52,{"inputs":[{"name":"self"}],"output":{"generics":["topicpartitionlistelem"],"name":"vec"}}],[11,"elements_for_topic","","Returns all the elements of the list that belong to the specified topic.",52,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["topicpartitionlistelem"],"name":"vec"}}],[11,"to_topic_map","","Returns a hashmap-based representation of the list.",52,{"inputs":[{"name":"self"}],"output":{"generics":["offset"],"name":"hashmap"}}],[11,"drop","","",52,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"topicpartitionlist"}],"output":{"name":"bool"}}],[11,"default","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"util","rdkafka","Utility functions",null,null],[5,"get_rdkafka_version","rdkafka::util","Return a tuple representing the version of `librdkafka` in hexadecimal and string format.",null,null],[5,"duration_to_millis","","Converts a Duration into milliseconds",null,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[5,"millis_to_epoch","","Converts the given time to milliseconds since unix epoch.",null,{"inputs":[{"name":"systemtime"}],"output":{"name":"i64"}}],[5,"current_time_millis","","Returns the current time in millis since unix epoch.",null,{"inputs":[],"output":{"name":"i64"}}],[5,"bytes_cstr_to_owned","","Converts a byte array representing a C string into a String.",null,null],[5,"cstr_to_owned","","Converts a C string into a String.",null,null],[8,"IntoOpaque","","A trait for the conversion of Rust data to raw pointers. This conversion is used to pass opaque objects to the C library and vice versa.",null,null],[10,"into_ptr","","Converts the object into a raw pointer.",53,null],[10,"from_ptr","","Converts the raw pointer back to the original Rust object.",53,null],[11,"fmt","rdkafka::error","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","rdkafka::types","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","rdkafka::error","",0,{"inputs":[{"name":"rd_kafka_resp_err_t"}],"output":{"name":"rdkafkaerror"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","rdkafka::types","",1,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_resp_err_t"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_type_t"}}],[11,"clone","rdkafka::error","",0,{"inputs":[{"name":"self"}],"output":{"name":"rdkafkaerror"}}],[11,"clone","rdkafka::types","",3,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_conf_res_t"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"rd_kafka_conf_res_t"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"rd_kafka_resp_err_t"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"rd_kafka_type_t"}],"output":{"name":"bool"}}],[11,"eq","rdkafka::error","",0,{"inputs":[{"name":"self"},{"name":"rdkafkaerror"}],"output":{"name":"bool"}}],[11,"hash","rdkafka::types","",3,null],[11,"hash","","",2,null],[11,"hash","","",1,null],[11,"fmt","rdkafka::error","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}]],"paths":[[4,"RDKafkaError"],[4,"RDKafkaRespErr"],[4,"RDKafkaType"],[4,"RDKafkaConfRes"],[8,"ClientContext"],[3,"DefaultClientContext"],[3,"NativeClient"],[3,"Client"],[3,"ClientConfig"],[4,"RDKafkaLogLevel"],[8,"FromClientConfig"],[8,"FromClientConfigAndContext"],[3,"NativeClientConfig"],[4,"Rebalance"],[4,"CommitMode"],[3,"BaseConsumer"],[3,"Iter"],[3,"MessageStream"],[3,"StreamConsumer"],[8,"ConsumerContext"],[8,"Consumer"],[3,"DefaultConsumerContext"],[4,"KafkaError"],[8,"IsError"],[3,"GroupMemberInfo"],[3,"GroupInfo"],[3,"GroupList"],[4,"Timestamp"],[8,"Message"],[8,"FromBytes"],[8,"ToBytes"],[3,"BorrowedMessage"],[3,"OwnedMessage"],[3,"MetadataBroker"],[3,"MetadataPartition"],[3,"MetadataTopic"],[3,"Metadata"],[8,"ProducerContext"],[3,"DefaultProducerContext"],[3,"BaseProducer"],[3,"ThreadedProducer"],[3,"FutureProducer"],[3,"DeliveryFuture"],[3,"Statistics"],[3,"Broker"],[3,"Window"],[3,"TopicPartition"],[3,"Topic"],[3,"Partition"],[3,"ConsumerGroup"],[4,"Offset"],[3,"TopicPartitionListElem"],[3,"TopicPartitionList"],[8,"IntoOpaque"]]};
searchIndex["rdkafka_sys"] = {"doc":"rdkafka-sys","items":[[0,"bindings","rdkafka_sys","",null,null],[3,"__darwin_pthread_handler_rec","rdkafka_sys::bindings","",null,null],[12,"__routine","","",0,null],[12,"__arg","","",0,null],[12,"__next","","",0,null],[3,"_opaque_pthread_attr_t","","",null,null],[12,"__sig","","",1,null],[12,"__opaque","","",1,null],[3,"_opaque_pthread_cond_t","","",null,null],[12,"__sig","","",2,null],[12,"__opaque","","",2,null],[3,"_opaque_pthread_condattr_t","","",null,null],[12,"__sig","","",3,null],[12,"__opaque","","",3,null],[3,"_opaque_pthread_mutex_t","","",null,null],[12,"__sig","","",4,null],[12,"__opaque","","",4,null],[3,"_opaque_pthread_mutexattr_t","","",null,null],[12,"__sig","","",5,null],[12,"__opaque","","",5,null],[3,"_opaque_pthread_once_t","","",null,null],[12,"__sig","","",6,null],[12,"__opaque","","",6,null],[3,"_opaque_pthread_rwlock_t","","",null,null],[12,"__sig","","",7,null],[12,"__opaque","","",7,null],[3,"_opaque_pthread_rwlockattr_t","","",null,null],[12,"__sig","","",8,null],[12,"__opaque","","",8,null],[3,"_opaque_pthread_t","","",null,null],[12,"__sig","","",9,null],[12,"__cleanup_stack","","",9,null],[12,"__opaque","","",9,null],[3,"__sbuf","","",null,null],[12,"_base","","",10,null],[12,"_size","","",10,null],[3,"__sFILEX","","",null,null],[3,"__sFILE","","",null,null],[12,"_p","","",11,null],[12,"_r","","",11,null],[12,"_w","","",11,null],[12,"_flags","","",11,null],[12,"_file","","",11,null],[12,"_bf","","",11,null],[12,"_lbfsize","","",11,null],[12,"_cookie","","",11,null],[12,"_close","","",11,null],[12,"_read","","",11,null],[12,"_seek","","",11,null],[12,"_write","","",11,null],[12,"_ub","","",11,null],[12,"_extra","","",11,null],[12,"_ur","","",11,null],[12,"_ubuf","","",11,null],[12,"_nbuf","","",11,null],[12,"_lb","","",11,null],[12,"_blksize","","",11,null],[12,"_offset","","",11,null],[3,"imaxdiv_t","","",null,null],[12,"quot","","",12,null],[12,"rem","","",12,null],[3,"fd_set","","",null,null],[12,"fds_bits","","",13,null],[3,"iovec","","",null,null],[12,"iov_base","","",14,null],[12,"iov_len","","",14,null],[3,"sa_endpoints","","",null,null],[12,"sae_srcif","","",15,null],[12,"sae_srcaddr","","",15,null],[12,"sae_srcaddrlen","","",15,null],[12,"sae_dstaddr","","",15,null],[12,"sae_dstaddrlen","","",15,null],[3,"linger","","",null,null],[12,"l_onoff","","",16,null],[12,"l_linger","","",16,null],[3,"so_np_extensions","","",null,null],[12,"npx_flags","","",17,null],[12,"npx_mask","","",17,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",18,null],[12,"sa_family","","",18,null],[12,"sa_data","","",18,null],[3,"sockproto","","",null,null],[12,"sp_family","","",19,null],[12,"sp_protocol","","",19,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",20,null],[12,"ss_family","","",20,null],[12,"__ss_pad1","","",20,null],[12,"__ss_align","","",20,null],[12,"__ss_pad2","","",20,null],[3,"msghdr","","",null,null],[12,"msg_name","","",21,null],[12,"msg_namelen","","",21,null],[12,"msg_iov","","",21,null],[12,"msg_iovlen","","",21,null],[12,"msg_control","","",21,null],[12,"msg_controllen","","",21,null],[12,"msg_flags","","",21,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",22,null],[12,"cmsg_level","","",22,null],[12,"cmsg_type","","",22,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",23,null],[12,"hdr_cnt","","",23,null],[12,"trailers","","",23,null],[12,"trl_cnt","","",23,null],[3,"rd_kafka_s","","",null,null],[3,"rd_kafka_topic_s","","",null,null],[3,"rd_kafka_conf_s","","",null,null],[3,"rd_kafka_topic_conf_s","","",null,null],[3,"rd_kafka_queue_s","","",null,null],[3,"rd_kafka_err_desc","","",null,null],[12,"code","","",24,null],[12,"name","","",24,null],[12,"desc","","",24,null],[3,"rd_kafka_topic_partition_s","","",null,null],[12,"topic","","",25,null],[12,"partition","","",25,null],[12,"offset","","",25,null],[12,"metadata","","",25,null],[12,"metadata_size","","",25,null],[12,"opaque","","",25,null],[12,"err","","",25,null],[12,"_private","","",25,null],[3,"rd_kafka_topic_partition_list_s","","",null,null],[12,"cnt","","",26,null],[12,"size","","",26,null],[12,"elems","","",26,null],[3,"rd_kafka_message_s","","",null,null],[12,"err","","",27,null],[12,"rkt","","",27,null],[12,"partition","","",27,null],[12,"payload","","",27,null],[12,"len","","",27,null],[12,"key","","",27,null],[12,"key_len","","",27,null],[12,"offset","","",27,null],[12,"_private","","",27,null],[3,"rd_kafka_metadata_broker","","",null,null],[12,"id","","",28,null],[12,"host","","",28,null],[12,"port","","",28,null],[3,"rd_kafka_metadata_partition","","",null,null],[12,"id","","",29,null],[12,"err","","",29,null],[12,"leader","","",29,null],[12,"replica_cnt","","",29,null],[12,"replicas","","",29,null],[12,"isr_cnt","","",29,null],[12,"isrs","","",29,null],[3,"rd_kafka_metadata_topic","","",null,null],[12,"topic","","",30,null],[12,"partition_cnt","","",30,null],[12,"partitions","","",30,null],[12,"err","","",30,null],[3,"rd_kafka_metadata","","",null,null],[12,"broker_cnt","","",31,null],[12,"brokers","","",31,null],[12,"topic_cnt","","",31,null],[12,"topics","","",31,null],[12,"orig_broker_id","","",31,null],[12,"orig_broker_name","","",31,null],[3,"rd_kafka_group_member_info","","",null,null],[12,"member_id","","",32,null],[12,"client_id","","",32,null],[12,"client_host","","",32,null],[12,"member_metadata","","",32,null],[12,"member_metadata_size","","",32,null],[12,"member_assignment","","",32,null],[12,"member_assignment_size","","",32,null],[3,"rd_kafka_group_info","","",null,null],[12,"broker","","",33,null],[12,"group","","",33,null],[12,"err","","",33,null],[12,"state","","",33,null],[12,"protocol_type","","",33,null],[12,"protocol","","",33,null],[12,"members","","",33,null],[12,"member_cnt","","",33,null],[3,"rd_kafka_group_list","","",null,null],[12,"groups","","",34,null],[12,"group_cnt","","",34,null],[3,"rd_kafka_op_s","","",null,null],[3,"__va_list_tag","","",null,null],[12,"gp_offset","","",35,null],[12,"fp_offset","","",35,null],[12,"overflow_arg_area","","",35,null],[12,"reg_save_area","","",35,null],[19,"__mbstate_t","","",null,null],[12,"__mbstate8","","",36,null],[12,"_mbstateL","","",36,null],[4,"rd_kafka_type_t","","",null,null],[13,"RD_KAFKA_PRODUCER","","",37,null],[13,"RD_KAFKA_CONSUMER","","",37,null],[4,"rd_kafka_timestamp_type_t","","",null,null],[13,"RD_KAFKA_TIMESTAMP_NOT_AVAILABLE","","",38,null],[13,"RD_KAFKA_TIMESTAMP_CREATE_TIME","","",38,null],[13,"RD_KAFKA_TIMESTAMP_LOG_APPEND_TIME","","",38,null],[4,"rd_kafka_resp_err_t","","",null,null],[13,"RD_KAFKA_RESP_ERR__BEGIN","","",39,null],[13,"RD_KAFKA_RESP_ERR__BAD_MSG","","",39,null],[13,"RD_KAFKA_RESP_ERR__BAD_COMPRESSION","","",39,null],[13,"RD_KAFKA_RESP_ERR__DESTROY","","",39,null],[13,"RD_KAFKA_RESP_ERR__FAIL","","",39,null],[13,"RD_KAFKA_RESP_ERR__TRANSPORT","","",39,null],[13,"RD_KAFKA_RESP_ERR__CRIT_SYS_RESOURCE","","",39,null],[13,"RD_KAFKA_RESP_ERR__RESOLVE","","",39,null],[13,"RD_KAFKA_RESP_ERR__MSG_TIMED_OUT","","",39,null],[13,"RD_KAFKA_RESP_ERR__PARTITION_EOF","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION","","",39,null],[13,"RD_KAFKA_RESP_ERR__FS","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC","","",39,null],[13,"RD_KAFKA_RESP_ERR__ALL_BROKERS_DOWN","","",39,null],[13,"RD_KAFKA_RESP_ERR__INVALID_ARG","","",39,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT","","",39,null],[13,"RD_KAFKA_RESP_ERR__QUEUE_FULL","","",39,null],[13,"RD_KAFKA_RESP_ERR__ISR_INSUFF","","",39,null],[13,"RD_KAFKA_RESP_ERR__NODE_UPDATE","","",39,null],[13,"RD_KAFKA_RESP_ERR__SSL","","",39,null],[13,"RD_KAFKA_RESP_ERR__WAIT_COORD","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_GROUP","","",39,null],[13,"RD_KAFKA_RESP_ERR__IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR__EXISTING_SUBSCRIPTION","","",39,null],[13,"RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR__CONFLICT","","",39,null],[13,"RD_KAFKA_RESP_ERR__STATE","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PROTOCOL","","",39,null],[13,"RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED","","",39,null],[13,"RD_KAFKA_RESP_ERR__AUTHENTICATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__NO_OFFSET","","",39,null],[13,"RD_KAFKA_RESP_ERR__OUTDATED","","",39,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE","","",39,null],[13,"RD_KAFKA_RESP_ERR__WAIT_CACHE","","",39,null],[13,"RD_KAFKA_RESP_ERR__INTR","","",39,null],[13,"RD_KAFKA_RESP_ERR__KEY_SERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__VALUE_SERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__KEY_DESERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__VALUE_DESERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__PARTIAL","","",39,null],[13,"RD_KAFKA_RESP_ERR__END","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN","","",39,null],[13,"RD_KAFKA_RESP_ERR_NO_ERROR","","",39,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_OUT_OF_RANGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG_SIZE","","",39,null],[13,"RD_KAFKA_RESP_ERR_LEADER_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_LEADER_FOR_PARTITION","","",39,null],[13,"RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT","","",39,null],[13,"RD_KAFKA_RESP_ERR_BROKER_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_REPLICA_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_STALE_CTRL_EPOCH","","",39,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_METADATA_TOO_LARGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NETWORK_EXCEPTION","","",39,null],[13,"RD_KAFKA_RESP_ERR_GROUP_LOAD_IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR_GROUP_COORDINATOR_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_COORDINATOR_FOR_GROUP","","",39,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_EXCEPTION","","",39,null],[13,"RD_KAFKA_RESP_ERR_RECORD_LIST_TOO_LARGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS_AFTER_APPEND","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUIRED_ACKS","","",39,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION","","",39,null],[13,"RD_KAFKA_RESP_ERR_INCONSISTENT_GROUP_PROTOCOL","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_GROUP_ID","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_SESSION_TIMEOUT","","",39,null],[13,"RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_COMMIT_OFFSET_SIZE","","",39,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TIMESTAMP","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_SASL_MECHANISM","","",39,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_SASL_STATE","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_VERSION","","",39,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_ALREADY_EXISTS","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PARTITIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICATION_FACTOR","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICA_ASSIGNMENT","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_CONFIG","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_CONTROLLER","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUEST","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT","","",39,null],[13,"RD_KAFKA_RESP_ERR_POLICY_VIOLATION","","",39,null],[13,"RD_KAFKA_RESP_ERR_OUT_OF_ORDER_SEQUENCE_NUMBER","","",39,null],[13,"RD_KAFKA_RESP_ERR_DUPLICATE_SEQUENCE_NUMBER","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TXN_STATE","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TRANSACTION_TIMEOUT","","",39,null],[13,"RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTION_COORDINATOR_FENCED","","",39,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_SECURITY_DISABLED","","",39,null],[13,"RD_KAFKA_RESP_ERR_OPERATION_NOT_ATTEMPTED","","",39,null],[13,"RD_KAFKA_RESP_ERR_END_ALL","","",39,null],[4,"rd_kafka_vtype_t","","",null,null],[13,"RD_KAFKA_VTYPE_END","","",40,null],[13,"RD_KAFKA_VTYPE_TOPIC","","",40,null],[13,"RD_KAFKA_VTYPE_RKT","","",40,null],[13,"RD_KAFKA_VTYPE_PARTITION","","",40,null],[13,"RD_KAFKA_VTYPE_VALUE","","",40,null],[13,"RD_KAFKA_VTYPE_KEY","","",40,null],[13,"RD_KAFKA_VTYPE_OPAQUE","","",40,null],[13,"RD_KAFKA_VTYPE_MSGFLAGS","","",40,null],[13,"RD_KAFKA_VTYPE_TIMESTAMP","","",40,null],[4,"rd_kafka_conf_res_t","","",null,null],[13,"RD_KAFKA_CONF_UNKNOWN","","",41,null],[13,"RD_KAFKA_CONF_INVALID","","",41,null],[13,"RD_KAFKA_CONF_OK","","",41,null],[5,"renameat","","",null,null],[5,"renamex_np","","",null,null],[5,"renameatx_np","","",null,null],[7,"__stdinp","","",null,null],[7,"__stdoutp","","",null,null],[7,"__stderrp","","",null,null],[5,"clearerr","","",null,null],[5,"fclose","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"fflush","","",null,null],[5,"fgetc","","",null,null],[5,"fgetpos","","",null,null],[5,"fgets","","",null,null],[5,"fopen","","",null,null],[5,"fprintf","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"fread","","",null,null],[5,"freopen","","",null,null],[5,"fscanf","","",null,null],[5,"fseek","","",null,null],[5,"fsetpos","","",null,null],[5,"ftell","","",null,null],[5,"fwrite","","",null,null],[5,"getc","","",null,null],[5,"getchar","","",null,null],[5,"gets","","",null,null],[5,"perror","","",null,null],[5,"printf","","",null,null],[5,"putc","","",null,null],[5,"putchar","","",null,null],[5,"puts","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"rewind","","",null,null],[5,"scanf","","",null,null],[5,"setbuf","","",null,null],[5,"setvbuf","","",null,null],[5,"sprintf","","",null,null],[5,"sscanf","","",null,null],[5,"tmpfile","","",null,null],[5,"tmpnam","","",null,null],[5,"ungetc","","",null,null],[5,"vfprintf","","",null,null],[5,"vprintf","","",null,null],[5,"vsprintf","","",null,null],[5,"ctermid","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"pclose","","",null,null],[5,"popen","","",null,null],[5,"__srget","","",null,null],[5,"__svfscanf","","",null,null],[5,"__swbuf","","",null,null],[5,"flockfile","","",null,null],[5,"ftrylockfile","","",null,null],[5,"funlockfile","","",null,null],[5,"getc_unlocked","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putc_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"getw","","",null,null],[5,"putw","","",null,null],[5,"tempnam","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"snprintf","","",null,null],[5,"vfscanf","","",null,null],[5,"vscanf","","",null,null],[5,"vsnprintf","","",null,null],[5,"vsscanf","","",null,null],[5,"dprintf","","",null,null],[5,"vdprintf","","",null,null],[5,"getdelim","","",null,null],[5,"getline","","",null,null],[7,"sys_nerr","","",null,null],[7,"sys_errlist","","",null,null],[5,"asprintf","","",null,null],[5,"ctermid_r","","",null,null],[5,"fgetln","","",null,null],[5,"fmtcheck","","",null,null],[5,"fpurge","","",null,null],[5,"setbuffer","","",null,null],[5,"setlinebuf","","",null,null],[5,"vasprintf","","",null,null],[5,"zopen","","",null,null],[5,"funopen","","",null,null],[5,"__sprintf_chk","","",null,null],[5,"__snprintf_chk","","",null,null],[5,"__vsprintf_chk","","",null,null],[5,"__vsnprintf_chk","","",null,null],[5,"imaxabs","","",null,null],[5,"imaxdiv","","",null,null],[5,"strtoimax","","",null,null],[5,"strtoumax","","",null,null],[5,"wcstoimax","","",null,null],[5,"wcstoumax","","",null,null],[5,"accept","","",null,null],[5,"bind","","",null,null],[5,"connect","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"getsockopt","","",null,null],[5,"listen","","",null,null],[5,"recv","","",null,null],[5,"recvfrom","","",null,null],[5,"recvmsg","","",null,null],[5,"send","","",null,null],[5,"sendmsg","","",null,null],[5,"sendto","","",null,null],[5,"setsockopt","","",null,null],[5,"shutdown","","",null,null],[5,"sockatmark","","",null,null],[5,"socket","","",null,null],[5,"socketpair","","",null,null],[5,"sendfile","","",null,null],[5,"pfctlinput","","",null,null],[5,"connectx","","",null,null],[5,"disconnectx","","",null,null],[5,"rd_kafka_version","","",null,null],[5,"rd_kafka_version_str","","",null,null],[5,"rd_kafka_get_debug_contexts","","",null,null],[5,"rd_kafka_get_err_descs","","",null,null],[5,"rd_kafka_err2str","","",null,null],[5,"rd_kafka_err2name","","",null,null],[5,"rd_kafka_last_error","","",null,null],[5,"rd_kafka_errno2err","","",null,null],[5,"rd_kafka_errno","","",null,null],[5,"rd_kafka_topic_partition_destroy","","",null,null],[5,"rd_kafka_topic_partition_list_new","","",null,null],[5,"rd_kafka_topic_partition_list_destroy","","",null,null],[5,"rd_kafka_topic_partition_list_add","","",null,null],[5,"rd_kafka_topic_partition_list_add_range","","",null,null],[5,"rd_kafka_topic_partition_list_del","","",null,null],[5,"rd_kafka_topic_partition_list_del_by_idx","","",null,null],[5,"rd_kafka_topic_partition_list_copy","","",null,null],[5,"rd_kafka_topic_partition_list_set_offset","","",null,null],[5,"rd_kafka_topic_partition_list_find","","",null,null],[5,"rd_kafka_topic_partition_list_sort","","",null,null],[5,"rd_kafka_message_destroy","","",null,null],[5,"rd_kafka_message_timestamp","","",null,null],[5,"rd_kafka_message_latency","","",null,null],[5,"rd_kafka_conf_new","","",null,null],[5,"rd_kafka_conf_destroy","","",null,null],[5,"rd_kafka_conf_dup","","",null,null],[5,"rd_kafka_conf_dup_filter","","",null,null],[5,"rd_kafka_conf_set","","",null,null],[5,"rd_kafka_conf_set_events","","",null,null],[5,"rd_kafka_conf_set_dr_cb","","",null,null],[5,"rd_kafka_conf_set_dr_msg_cb","","",null,null],[5,"rd_kafka_conf_set_consume_cb","","",null,null],[5,"rd_kafka_conf_set_rebalance_cb","","",null,null],[5,"rd_kafka_conf_set_offset_commit_cb","","",null,null],[5,"rd_kafka_conf_set_error_cb","","",null,null],[5,"rd_kafka_conf_set_throttle_cb","","",null,null],[5,"rd_kafka_conf_set_log_cb","","",null,null],[5,"rd_kafka_conf_set_stats_cb","","",null,null],[5,"rd_kafka_conf_set_socket_cb","","",null,null],[5,"rd_kafka_conf_set_connect_cb","","",null,null],[5,"rd_kafka_conf_set_closesocket_cb","","",null,null],[5,"rd_kafka_conf_set_open_cb","","",null,null],[5,"rd_kafka_conf_set_opaque","","",null,null],[5,"rd_kafka_opaque","","",null,null],[5,"rd_kafka_conf_set_default_topic_conf","","",null,null],[5,"rd_kafka_conf_get","","",null,null],[5,"rd_kafka_topic_conf_get","","",null,null],[5,"rd_kafka_conf_dump","","",null,null],[5,"rd_kafka_topic_conf_dump","","",null,null],[5,"rd_kafka_conf_dump_free","","",null,null],[5,"rd_kafka_conf_properties_show","","",null,null],[5,"rd_kafka_topic_conf_new","","",null,null],[5,"rd_kafka_topic_conf_dup","","",null,null],[5,"rd_kafka_topic_conf_destroy","","",null,null],[5,"rd_kafka_topic_conf_set","","",null,null],[5,"rd_kafka_topic_conf_set_opaque","","",null,null],[5,"rd_kafka_topic_conf_set_partitioner_cb","","",null,null],[5,"rd_kafka_topic_partition_available","","",null,null],[5,"rd_kafka_msg_partitioner_random","","",null,null],[5,"rd_kafka_msg_partitioner_consistent","","",null,null],[5,"rd_kafka_msg_partitioner_consistent_random","","",null,null],[5,"rd_kafka_new","","",null,null],[5,"rd_kafka_destroy","","",null,null],[5,"rd_kafka_name","","",null,null],[5,"rd_kafka_type","","",null,null],[5,"rd_kafka_memberid","","",null,null],[5,"rd_kafka_clusterid","","",null,null],[5,"rd_kafka_topic_new","","",null,null],[5,"rd_kafka_topic_destroy","","",null,null],[5,"rd_kafka_topic_name","","",null,null],[5,"rd_kafka_topic_opaque","","",null,null],[5,"rd_kafka_poll","","",null,null],[5,"rd_kafka_yield","","",null,null],[5,"rd_kafka_pause_partitions","","",null,null],[5,"rd_kafka_resume_partitions","","",null,null],[5,"rd_kafka_query_watermark_offsets","","",null,null],[5,"rd_kafka_get_watermark_offsets","","",null,null],[5,"rd_kafka_offsets_for_times","","",null,null],[5,"rd_kafka_mem_free","","",null,null],[5,"rd_kafka_queue_new","","",null,null],[5,"rd_kafka_queue_destroy","","",null,null],[5,"rd_kafka_queue_get_main","","",null,null],[5,"rd_kafka_queue_get_consumer","","",null,null],[5,"rd_kafka_queue_get_partition","","",null,null],[5,"rd_kafka_queue_forward","","",null,null],[5,"rd_kafka_set_log_queue","","",null,null],[5,"rd_kafka_queue_length","","",null,null],[5,"rd_kafka_queue_io_event_enable","","",null,null],[5,"rd_kafka_consume_start","","",null,null],[5,"rd_kafka_consume_start_queue","","",null,null],[5,"rd_kafka_consume_stop","","",null,null],[5,"rd_kafka_seek","","",null,null],[5,"rd_kafka_consume","","",null,null],[5,"rd_kafka_consume_batch","","",null,null],[5,"rd_kafka_consume_callback","","",null,null],[5,"rd_kafka_consume_queue","","",null,null],[5,"rd_kafka_consume_batch_queue","","",null,null],[5,"rd_kafka_consume_callback_queue","","",null,null],[5,"rd_kafka_offset_store","","",null,null],[5,"rd_kafka_offsets_store","","",null,null],[5,"rd_kafka_subscribe","","",null,null],[5,"rd_kafka_unsubscribe","","",null,null],[5,"rd_kafka_subscription","","",null,null],[5,"rd_kafka_consumer_poll","","",null,null],[5,"rd_kafka_consumer_close","","",null,null],[5,"rd_kafka_assign","","",null,null],[5,"rd_kafka_assignment","","",null,null],[5,"rd_kafka_commit","","",null,null],[5,"rd_kafka_commit_message","","",null,null],[5,"rd_kafka_commit_queue","","",null,null],[5,"rd_kafka_committed","","",null,null],[5,"rd_kafka_position","","",null,null],[5,"rd_kafka_produce","","",null,null],[5,"rd_kafka_producev","","",null,null],[5,"rd_kafka_produce_batch","","",null,null],[5,"rd_kafka_flush","","",null,null],[5,"rd_kafka_metadata","","",null,null],[5,"rd_kafka_metadata_destroy","","",null,null],[5,"rd_kafka_list_groups","","",null,null],[5,"rd_kafka_group_list_destroy","","",null,null],[5,"rd_kafka_brokers_add","","",null,null],[5,"rd_kafka_set_logger","","",null,null],[5,"rd_kafka_set_log_level","","",null,null],[5,"rd_kafka_log_print","","",null,null],[5,"rd_kafka_log_syslog","","",null,null],[5,"rd_kafka_outq_len","","",null,null],[5,"rd_kafka_dump","","",null,null],[5,"rd_kafka_thread_cnt","","",null,null],[5,"rd_kafka_wait_destroyed","","",null,null],[5,"rd_kafka_unittest","","",null,null],[5,"rd_kafka_poll_set_consumer","","",null,null],[5,"rd_kafka_event_type","","",null,null],[5,"rd_kafka_event_name","","",null,null],[5,"rd_kafka_event_destroy","","",null,null],[5,"rd_kafka_event_message_next","","",null,null],[5,"rd_kafka_event_message_array","","",null,null],[5,"rd_kafka_event_message_count","","",null,null],[5,"rd_kafka_event_error","","",null,null],[5,"rd_kafka_event_error_string","","",null,null],[5,"rd_kafka_event_opaque","","",null,null],[5,"rd_kafka_event_log","","",null,null],[5,"rd_kafka_event_stats","","",null,null],[5,"rd_kafka_event_topic_partition_list","","",null,null],[5,"rd_kafka_event_topic_partition","","",null,null],[5,"rd_kafka_queue_poll","","",null,null],[5,"rd_kafka_queue_poll_callback","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_conf_set","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_conf_dup","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_conf_destroy","","",null,null],[5,"rd_kafka_conf_interceptor_add_on_new","","",null,null],[5,"rd_kafka_interceptor_add_on_destroy","","",null,null],[5,"rd_kafka_interceptor_add_on_send","","",null,null],[5,"rd_kafka_interceptor_add_on_acknowledgement","","",null,null],[5,"rd_kafka_interceptor_add_on_consume","","",null,null],[5,"rd_kafka_interceptor_add_on_commit","","",null,null],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"__sfilex"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_type_t"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"rd_kafka_type_t"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_timestamp_type_t"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"rd_kafka_timestamp_type_t"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_s"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_topic_s"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_conf_s"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_topic_conf_s"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_queue_s"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_resp_err_t"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"rd_kafka_resp_err_t"}],"output":{"name":"bool"}}],[11,"hash","","",39,null],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_vtype_t"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"rd_kafka_vtype_t"}],"output":{"name":"bool"}}],[11,"hash","","",40,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_conf_res_t"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"rd_kafka_conf_res_t"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"rd_kafka_op_s"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[6,"__int8_t","","",null,null],[6,"__uint8_t","","",null,null],[6,"__int16_t","","",null,null],[6,"__uint16_t","","",null,null],[6,"__int32_t","","",null,null],[6,"__uint32_t","","",null,null],[6,"__int64_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"__darwin_intptr_t","","",null,null],[6,"__darwin_natural_t","","",null,null],[6,"__darwin_ct_rune_t","","",null,null],[6,"__darwin_mbstate_t","","",null,null],[6,"__darwin_ptrdiff_t","","",null,null],[6,"__darwin_size_t","","",null,null],[6,"__darwin_va_list","","",null,null],[6,"__darwin_wchar_t","","",null,null],[6,"__darwin_rune_t","","",null,null],[6,"__darwin_wint_t","","",null,null],[6,"__darwin_clock_t","","",null,null],[6,"__darwin_socklen_t","","",null,null],[6,"__darwin_ssize_t","","",null,null],[6,"__darwin_time_t","","",null,null],[6,"__darwin_blkcnt_t","","",null,null],[6,"__darwin_blksize_t","","",null,null],[6,"__darwin_dev_t","","",null,null],[6,"__darwin_fsblkcnt_t","","",null,null],[6,"__darwin_fsfilcnt_t","","",null,null],[6,"__darwin_gid_t","","",null,null],[6,"__darwin_id_t","","",null,null],[6,"__darwin_ino64_t","","",null,null],[6,"__darwin_ino_t","","",null,null],[6,"__darwin_mach_port_name_t","","",null,null],[6,"__darwin_mach_port_t","","",null,null],[6,"__darwin_mode_t","","",null,null],[6,"__darwin_off_t","","",null,null],[6,"__darwin_pid_t","","",null,null],[6,"__darwin_sigset_t","","",null,null],[6,"__darwin_suseconds_t","","",null,null],[6,"__darwin_uid_t","","",null,null],[6,"__darwin_useconds_t","","",null,null],[6,"__darwin_uuid_t","","",null,null],[6,"__darwin_uuid_string_t","","",null,null],[6,"__darwin_pthread_attr_t","","",null,null],[6,"__darwin_pthread_cond_t","","",null,null],[6,"__darwin_pthread_condattr_t","","",null,null],[6,"__darwin_pthread_key_t","","",null,null],[6,"__darwin_pthread_mutex_t","","",null,null],[6,"__darwin_pthread_mutexattr_t","","",null,null],[6,"__darwin_pthread_once_t","","",null,null],[6,"__darwin_pthread_rwlock_t","","",null,null],[6,"__darwin_pthread_rwlockattr_t","","",null,null],[6,"__darwin_pthread_t","","",null,null],[6,"__darwin_nl_item","","",null,null],[6,"__darwin_wctrans_t","","",null,null],[6,"__darwin_wctype_t","","",null,null],[6,"va_list","","",null,null],[6,"fpos_t","","",null,null],[6,"FILE","","",null,null],[6,"off_t","","",null,null],[6,"wchar_t","","",null,null],[6,"int_least8_t","","",null,null],[6,"int_least16_t","","",null,null],[6,"int_least32_t","","",null,null],[6,"int_least64_t","","",null,null],[6,"uint_least8_t","","",null,null],[6,"uint_least16_t","","",null,null],[6,"uint_least32_t","","",null,null],[6,"uint_least64_t","","",null,null],[6,"int_fast8_t","","",null,null],[6,"int_fast16_t","","",null,null],[6,"int_fast32_t","","",null,null],[6,"int_fast64_t","","",null,null],[6,"uint_fast8_t","","",null,null],[6,"uint_fast16_t","","",null,null],[6,"uint_fast32_t","","",null,null],[6,"uint_fast64_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"u_int8_t","","",null,null],[6,"u_int16_t","","",null,null],[6,"u_int32_t","","",null,null],[6,"u_int64_t","","",null,null],[6,"register_t","","",null,null],[6,"user_addr_t","","",null,null],[6,"user_size_t","","",null,null],[6,"user_ssize_t","","",null,null],[6,"user_long_t","","",null,null],[6,"user_ulong_t","","",null,null],[6,"user_time_t","","",null,null],[6,"user_off_t","","",null,null],[6,"syscall_arg_t","","",null,null],[6,"u_char","","",null,null],[6,"u_short","","",null,null],[6,"u_int","","",null,null],[6,"u_long","","",null,null],[6,"ushort","","",null,null],[6,"uint","","",null,null],[6,"u_quad_t","","",null,null],[6,"quad_t","","",null,null],[6,"qaddr_t","","",null,null],[6,"caddr_t","","",null,null],[6,"daddr_t","","",null,null],[6,"dev_t","","",null,null],[6,"fixpt_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"blksize_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"ino_t","","",null,null],[6,"ino64_t","","",null,null],[6,"key_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"id_t","","",null,null],[6,"pid_t","","",null,null],[6,"segsz_t","","",null,null],[6,"swblk_t","","",null,null],[6,"uid_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"useconds_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"rsize_t","","",null,null],[6,"errno_t","","",null,null],[6,"fd_mask","","",null,null],[6,"pthread_attr_t","","",null,null],[6,"pthread_cond_t","","",null,null],[6,"pthread_condattr_t","","",null,null],[6,"pthread_mutex_t","","",null,null],[6,"pthread_mutexattr_t","","",null,null],[6,"pthread_once_t","","",null,null],[6,"pthread_rwlock_t","","",null,null],[6,"pthread_rwlockattr_t","","",null,null],[6,"pthread_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sae_associd_t","","",null,null],[6,"sae_connid_t","","",null,null],[6,"sa_endpoints_t","","",null,null],[6,"rd_kafka_t","","",null,null],[6,"rd_kafka_topic_t","","",null,null],[6,"rd_kafka_conf_t","","",null,null],[6,"rd_kafka_topic_conf_t","","",null,null],[6,"rd_kafka_queue_t","","",null,null],[6,"rd_kafka_topic_partition_t","","",null,null],[6,"rd_kafka_topic_partition_list_t","","",null,null],[6,"rd_kafka_message_t","","",null,null],[6,"rd_kafka_metadata_broker_t","","",null,null],[6,"rd_kafka_metadata_partition_t","","",null,null],[6,"rd_kafka_metadata_topic_t","","",null,null],[6,"rd_kafka_metadata_t","","",null,null],[6,"rd_kafka_event_type_t","","",null,null],[6,"rd_kafka_event_t","","",null,null],[6,"rd_kafka_plugin_f_conf_init_t","","",null,null],[6,"rd_kafka_interceptor_f_on_conf_set_t","","",null,null],[6,"rd_kafka_interceptor_f_on_conf_dup_t","","",null,null],[6,"rd_kafka_interceptor_f_on_conf_destroy_t","","",null,null],[6,"rd_kafka_interceptor_f_on_new_t","","",null,null],[6,"rd_kafka_interceptor_f_on_destroy_t","","",null,null],[6,"rd_kafka_interceptor_f_on_send_t","","",null,null],[6,"rd_kafka_interceptor_f_on_acknowledgement_t","","",null,null],[6,"rd_kafka_interceptor_f_on_consume_t","","",null,null],[6,"rd_kafka_interceptor_f_on_commit_t","","",null,null],[6,"__builtin_va_list","","",null,null],[17,"__llvm__","","",null,null],[17,"__clang__","","",null,null],[17,"__clang_major__","","",null,null],[17,"__clang_minor__","","",null,null],[17,"__clang_patchlevel__","","",null,null],[17,"__clang_version__","","",null,null],[17,"__GNUC_MINOR__","","",null,null],[17,"__GNUC_PATCHLEVEL__","","",null,null],[17,"__GNUC__","","",null,null],[17,"__GXX_ABI_VERSION","","",null,null],[17,"__ATOMIC_RELAXED","","",null,null],[17,"__ATOMIC_CONSUME","","",null,null],[17,"__ATOMIC_ACQUIRE","","",null,null],[17,"__ATOMIC_RELEASE","","",null,null],[17,"__ATOMIC_ACQ_REL","","",null,null],[17,"__ATOMIC_SEQ_CST","","",null,null],[17,"__PRAGMA_REDEFINE_EXTNAME","","",null,null],[17,"__VERSION__","","",null,null],[17,"__OBJC_BOOL_IS_BOOL","","",null,null],[17,"__CONSTANT_CFSTRINGS__","","",null,null],[17,"__BLOCKS__","","",null,null],[17,"__ORDER_LITTLE_ENDIAN__","","",null,null],[17,"__ORDER_BIG_ENDIAN__","","",null,null],[17,"__ORDER_PDP_ENDIAN__","","",null,null],[17,"__BYTE_ORDER__","","",null,null],[17,"__LITTLE_ENDIAN__","","",null,null],[17,"_LP64","","",null,null],[17,"__LP64__","","",null,null],[17,"__CHAR_BIT__","","",null,null],[17,"__SCHAR_MAX__","","",null,null],[17,"__SHRT_MAX__","","",null,null],[17,"__INT_MAX__","","",null,null],[17,"__LONG_MAX__","","",null,null],[17,"__LONG_LONG_MAX__","","",null,null],[17,"__WCHAR_MAX__","","",null,null],[17,"__INTMAX_MAX__","","",null,null],[17,"__SIZE_MAX__","","",null,null],[17,"__UINTMAX_MAX__","","",null,null],[17,"__PTRDIFF_MAX__","","",null,null],[17,"__INTPTR_MAX__","","",null,null],[17,"__UINTPTR_MAX__","","",null,null],[17,"__SIZEOF_DOUBLE__","","",null,null],[17,"__SIZEOF_FLOAT__","","",null,null],[17,"__SIZEOF_INT__","","",null,null],[17,"__SIZEOF_LONG__","","",null,null],[17,"__SIZEOF_LONG_DOUBLE__","","",null,null],[17,"__SIZEOF_LONG_LONG__","","",null,null],[17,"__SIZEOF_POINTER__","","",null,null],[17,"__SIZEOF_SHORT__","","",null,null],[17,"__SIZEOF_PTRDIFF_T__","","",null,null],[17,"__SIZEOF_SIZE_T__","","",null,null],[17,"__SIZEOF_WCHAR_T__","","",null,null],[17,"__SIZEOF_WINT_T__","","",null,null],[17,"__SIZEOF_INT128__","","",null,null],[17,"__INTMAX_FMTd__","","",null,null],[17,"__INTMAX_FMTi__","","",null,null],[17,"__UINTMAX_FMTo__","","",null,null],[17,"__UINTMAX_FMTu__","","",null,null],[17,"__UINTMAX_FMTx__","","",null,null],[17,"__UINTMAX_FMTX__","","",null,null],[17,"__INTMAX_WIDTH__","","",null,null],[17,"__PTRDIFF_FMTd__","","",null,null],[17,"__PTRDIFF_FMTi__","","",null,null],[17,"__PTRDIFF_WIDTH__","","",null,null],[17,"__INTPTR_FMTd__","","",null,null],[17,"__INTPTR_FMTi__","","",null,null],[17,"__INTPTR_WIDTH__","","",null,null],[17,"__SIZE_FMTo__","","",null,null],[17,"__SIZE_FMTu__","","",null,null],[17,"__SIZE_FMTx__","","",null,null],[17,"__SIZE_FMTX__","","",null,null],[17,"__SIZE_WIDTH__","","",null,null],[17,"__WCHAR_WIDTH__","","",null,null],[17,"__WINT_WIDTH__","","",null,null],[17,"__SIG_ATOMIC_WIDTH__","","",null,null],[17,"__SIG_ATOMIC_MAX__","","",null,null],[17,"__UINTMAX_WIDTH__","","",null,null],[17,"__UINTPTR_FMTo__","","",null,null],[17,"__UINTPTR_FMTu__","","",null,null],[17,"__UINTPTR_FMTx__","","",null,null],[17,"__UINTPTR_FMTX__","","",null,null],[17,"__UINTPTR_WIDTH__","","",null,null],[17,"__FLT_HAS_DENORM__","","",null,null],[17,"__FLT_DIG__","","",null,null],[17,"__FLT_DECIMAL_DIG__","","",null,null],[17,"__FLT_HAS_INFINITY__","","",null,null],[17,"__FLT_HAS_QUIET_NAN__","","",null,null],[17,"__FLT_MANT_DIG__","","",null,null],[17,"__FLT_MAX_10_EXP__","","",null,null],[17,"__FLT_MAX_EXP__","","",null,null],[17,"__FLT_MIN_10_EXP__","","",null,null],[17,"__FLT_MIN_EXP__","","",null,null],[17,"__DBL_HAS_DENORM__","","",null,null],[17,"__DBL_DIG__","","",null,null],[17,"__DBL_DECIMAL_DIG__","","",null,null],[17,"__DBL_HAS_INFINITY__","","",null,null],[17,"__DBL_HAS_QUIET_NAN__","","",null,null],[17,"__DBL_MANT_DIG__","","",null,null],[17,"__DBL_MAX_10_EXP__","","",null,null],[17,"__DBL_MAX_EXP__","","",null,null],[17,"__DBL_MIN_10_EXP__","","",null,null],[17,"__DBL_MIN_EXP__","","",null,null],[17,"__LDBL_HAS_DENORM__","","",null,null],[17,"__LDBL_DIG__","","",null,null],[17,"__LDBL_DECIMAL_DIG__","","",null,null],[17,"__LDBL_HAS_INFINITY__","","",null,null],[17,"__LDBL_HAS_QUIET_NAN__","","",null,null],[17,"__LDBL_MANT_DIG__","","",null,null],[17,"__LDBL_MAX_10_EXP__","","",null,null],[17,"__LDBL_MAX_EXP__","","",null,null],[17,"__LDBL_MIN_10_EXP__","","",null,null],[17,"__LDBL_MIN_EXP__","","",null,null],[17,"__POINTER_WIDTH__","","",null,null],[17,"__BIGGEST_ALIGNMENT__","","",null,null],[17,"__INT8_FMTd__","","",null,null],[17,"__INT8_FMTi__","","",null,null],[17,"__INT16_FMTd__","","",null,null],[17,"__INT16_FMTi__","","",null,null],[17,"__INT32_FMTd__","","",null,null],[17,"__INT32_FMTi__","","",null,null],[17,"__INT64_FMTd__","","",null,null],[17,"__INT64_FMTi__","","",null,null],[17,"__UINT8_FMTo__","","",null,null],[17,"__UINT8_FMTu__","","",null,null],[17,"__UINT8_FMTx__","","",null,null],[17,"__UINT8_FMTX__","","",null,null],[17,"__UINT8_MAX__","","",null,null],[17,"__INT8_MAX__","","",null,null],[17,"__UINT16_FMTo__","","",null,null],[17,"__UINT16_FMTu__","","",null,null],[17,"__UINT16_FMTx__","","",null,null],[17,"__UINT16_FMTX__","","",null,null],[17,"__UINT16_MAX__","","",null,null],[17,"__INT16_MAX__","","",null,null],[17,"__UINT32_FMTo__","","",null,null],[17,"__UINT32_FMTu__","","",null,null],[17,"__UINT32_FMTx__","","",null,null],[17,"__UINT32_FMTX__","","",null,null],[17,"__UINT32_MAX__","","",null,null],[17,"__INT32_MAX__","","",null,null],[17,"__UINT64_FMTo__","","",null,null],[17,"__UINT64_FMTu__","","",null,null],[17,"__UINT64_FMTx__","","",null,null],[17,"__UINT64_FMTX__","","",null,null],[17,"__UINT64_MAX__","","",null,null],[17,"__INT64_MAX__","","",null,null],[17,"__INT_LEAST8_MAX__","","",null,null],[17,"__INT_LEAST8_FMTd__","","",null,null],[17,"__INT_LEAST8_FMTi__","","",null,null],[17,"__UINT_LEAST8_MAX__","","",null,null],[17,"__UINT_LEAST8_FMTo__","","",null,null],[17,"__UINT_LEAST8_FMTu__","","",null,null],[17,"__UINT_LEAST8_FMTx__","","",null,null],[17,"__UINT_LEAST8_FMTX__","","",null,null],[17,"__INT_LEAST16_MAX__","","",null,null],[17,"__INT_LEAST16_FMTd__","","",null,null],[17,"__INT_LEAST16_FMTi__","","",null,null],[17,"__UINT_LEAST16_MAX__","","",null,null],[17,"__UINT_LEAST16_FMTo__","","",null,null],[17,"__UINT_LEAST16_FMTu__","","",null,null],[17,"__UINT_LEAST16_FMTx__","","",null,null],[17,"__UINT_LEAST16_FMTX__","","",null,null],[17,"__INT_LEAST32_MAX__","","",null,null],[17,"__INT_LEAST32_FMTd__","","",null,null],[17,"__INT_LEAST32_FMTi__","","",null,null],[17,"__UINT_LEAST32_MAX__","","",null,null],[17,"__UINT_LEAST32_FMTo__","","",null,null],[17,"__UINT_LEAST32_FMTu__","","",null,null],[17,"__UINT_LEAST32_FMTx__","","",null,null],[17,"__UINT_LEAST32_FMTX__","","",null,null],[17,"__INT_LEAST64_MAX__","","",null,null],[17,"__INT_LEAST64_FMTd__","","",null,null],[17,"__INT_LEAST64_FMTi__","","",null,null],[17,"__UINT_LEAST64_MAX__","","",null,null],[17,"__UINT_LEAST64_FMTo__","","",null,null],[17,"__UINT_LEAST64_FMTu__","","",null,null],[17,"__UINT_LEAST64_FMTx__","","",null,null],[17,"__UINT_LEAST64_FMTX__","","",null,null],[17,"__INT_FAST8_MAX__","","",null,null],[17,"__INT_FAST8_FMTd__","","",null,null],[17,"__INT_FAST8_FMTi__","","",null,null],[17,"__UINT_FAST8_MAX__","","",null,null],[17,"__UINT_FAST8_FMTo__","","",null,null],[17,"__UINT_FAST8_FMTu__","","",null,null],[17,"__UINT_FAST8_FMTx__","","",null,null],[17,"__UINT_FAST8_FMTX__","","",null,null],[17,"__INT_FAST16_MAX__","","",null,null],[17,"__INT_FAST16_FMTd__","","",null,null],[17,"__INT_FAST16_FMTi__","","",null,null],[17,"__UINT_FAST16_MAX__","","",null,null],[17,"__UINT_FAST16_FMTo__","","",null,null],[17,"__UINT_FAST16_FMTu__","","",null,null],[17,"__UINT_FAST16_FMTx__","","",null,null],[17,"__UINT_FAST16_FMTX__","","",null,null],[17,"__INT_FAST32_MAX__","","",null,null],[17,"__INT_FAST32_FMTd__","","",null,null],[17,"__INT_FAST32_FMTi__","","",null,null],[17,"__UINT_FAST32_MAX__","","",null,null],[17,"__UINT_FAST32_FMTo__","","",null,null],[17,"__UINT_FAST32_FMTu__","","",null,null],[17,"__UINT_FAST32_FMTx__","","",null,null],[17,"__UINT_FAST32_FMTX__","","",null,null],[17,"__INT_FAST64_MAX__","","",null,null],[17,"__INT_FAST64_FMTd__","","",null,null],[17,"__INT_FAST64_FMTi__","","",null,null],[17,"__UINT_FAST64_MAX__","","",null,null],[17,"__UINT_FAST64_FMTo__","","",null,null],[17,"__UINT_FAST64_FMTu__","","",null,null],[17,"__UINT_FAST64_FMTx__","","",null,null],[17,"__UINT_FAST64_FMTX__","","",null,null],[17,"__FINITE_MATH_ONLY__","","",null,null],[17,"__GNUC_STDC_INLINE__","","",null,null],[17,"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL","","",null,null],[17,"__GCC_ATOMIC_BOOL_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_CHAR_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_CHAR16_T_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_CHAR32_T_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_WCHAR_T_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_SHORT_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_INT_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_LONG_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_LLONG_LOCK_FREE","","",null,null],[17,"__GCC_ATOMIC_POINTER_LOCK_FREE","","",null,null],[17,"__NO_INLINE__","","",null,null],[17,"__PIC__","","",null,null],[17,"__pic__","","",null,null],[17,"__FLT_EVAL_METHOD__","","",null,null],[17,"__FLT_RADIX__","","",null,null],[17,"__DECIMAL_DIG__","","",null,null],[17,"__SSP__","","",null,null],[17,"__amd64__","","",null,null],[17,"__amd64","","",null,null],[17,"__x86_64","","",null,null],[17,"__x86_64__","","",null,null],[17,"__core2","","",null,null],[17,"__core2__","","",null,null],[17,"__tune_core2__","","",null,null],[17,"__NO_MATH_INLINES","","",null,null],[17,"__FXSR__","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16","","",null,null],[17,"__SSSE3__","","",null,null],[17,"__SSE3__","","",null,null],[17,"__SSE2__","","",null,null],[17,"__SSE2_MATH__","","",null,null],[17,"__SSE__","","",null,null],[17,"__SSE_MATH__","","",null,null],[17,"__MMX__","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4","","",null,null],[17,"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8","","",null,null],[17,"__APPLE_CC__","","",null,null],[17,"__APPLE__","","",null,null],[17,"OBJC_NEW_PROPERTIES","","",null,null],[17,"__apple_build_version__","","",null,null],[17,"__DYNAMIC__","","",null,null],[17,"__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__","","",null,null],[17,"__MACH__","","",null,null],[17,"__STDC__","","",null,null],[17,"__STDC_HOSTED__","","",null,null],[17,"__STDC_VERSION__","","",null,null],[17,"__STDC_UTF_16__","","",null,null],[17,"__STDC_UTF_32__","","",null,null],[17,"__DARWIN_ONLY_64_BIT_INO_T","","",null,null],[17,"__DARWIN_ONLY_VERS_1050","","",null,null],[17,"__DARWIN_ONLY_UNIX_CONFORMANCE","","",null,null],[17,"__DARWIN_UNIX03","","",null,null],[17,"__DARWIN_64_BIT_INO_T","","",null,null],[17,"__DARWIN_VERS_1050","","",null,null],[17,"__DARWIN_NON_CANCELABLE","","",null,null],[17,"__DARWIN_SUF_64_BIT_INO_T","","",null,null],[17,"__DARWIN_SUF_1050","","",null,null],[17,"__DARWIN_SUF_EXTSN","","",null,null],[17,"__DARWIN_C_ANSI","","",null,null],[17,"__DARWIN_C_FULL","","",null,null],[17,"__DARWIN_C_LEVEL","","",null,null],[17,"__STDC_WANT_LIB_EXT1__","","",null,null],[17,"_DARWIN_FEATURE_64_BIT_INODE","","",null,null],[17,"_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE","","",null,null],[17,"_DARWIN_FEATURE_UNIX_CONFORMANCE","","",null,null],[17,"__MAC_10_0","","",null,null],[17,"__MAC_10_1","","",null,null],[17,"__MAC_10_2","","",null,null],[17,"__MAC_10_3","","",null,null],[17,"__MAC_10_4","","",null,null],[17,"__MAC_10_5","","",null,null],[17,"__MAC_10_6","","",null,null],[17,"__MAC_10_7","","",null,null],[17,"__MAC_10_8","","",null,null],[17,"__MAC_10_9","","",null,null],[17,"__MAC_10_10","","",null,null],[17,"__MAC_10_10_2","","",null,null],[17,"__MAC_10_10_3","","",null,null],[17,"__MAC_10_11","","",null,null],[17,"__MAC_10_11_2","","",null,null],[17,"__MAC_10_11_3","","",null,null],[17,"__MAC_10_11_4","","",null,null],[17,"__MAC_10_12","","",null,null],[17,"__MAC_10_12_1","","",null,null],[17,"__MAC_10_12_2","","",null,null],[17,"__MAC_10_12_4","","",null,null],[17,"__IPHONE_2_0","","",null,null],[17,"__IPHONE_2_1","","",null,null],[17,"__IPHONE_2_2","","",null,null],[17,"__IPHONE_3_0","","",null,null],[17,"__IPHONE_3_1","","",null,null],[17,"__IPHONE_3_2","","",null,null],[17,"__IPHONE_4_0","","",null,null],[17,"__IPHONE_4_1","","",null,null],[17,"__IPHONE_4_2","","",null,null],[17,"__IPHONE_4_3","","",null,null],[17,"__IPHONE_5_0","","",null,null],[17,"__IPHONE_5_1","","",null,null],[17,"__IPHONE_6_0","","",null,null],[17,"__IPHONE_6_1","","",null,null],[17,"__IPHONE_7_0","","",null,null],[17,"__IPHONE_7_1","","",null,null],[17,"__IPHONE_8_0","","",null,null],[17,"__IPHONE_8_1","","",null,null],[17,"__IPHONE_8_2","","",null,null],[17,"__IPHONE_8_3","","",null,null],[17,"__IPHONE_8_4","","",null,null],[17,"__IPHONE_9_0","","",null,null],[17,"__IPHONE_9_1","","",null,null],[17,"__IPHONE_9_2","","",null,null],[17,"__IPHONE_9_3","","",null,null],[17,"__IPHONE_10_0","","",null,null],[17,"__IPHONE_10_1","","",null,null],[17,"__IPHONE_10_2","","",null,null],[17,"__IPHONE_10_3","","",null,null],[17,"__TVOS_9_0","","",null,null],[17,"__TVOS_9_1","","",null,null],[17,"__TVOS_9_2","","",null,null],[17,"__TVOS_10_0","","",null,null],[17,"__TVOS_10_0_1","","",null,null],[17,"__TVOS_10_1","","",null,null],[17,"__TVOS_10_2","","",null,null],[17,"__WATCHOS_1_0","","",null,null],[17,"__WATCHOS_2_0","","",null,null],[17,"__WATCHOS_2_1","","",null,null],[17,"__WATCHOS_2_2","","",null,null],[17,"__WATCHOS_3_0","","",null,null],[17,"__WATCHOS_3_1","","",null,null],[17,"__WATCHOS_3_1_1","","",null,null],[17,"__WATCHOS_3_2","","",null,null],[17,"__MAC_OS_X_VERSION_MIN_REQUIRED","","",null,null],[17,"__MAC_OS_X_VERSION_MAX_ALLOWED","","",null,null],[17,"__PTHREAD_SIZE__","","",null,null],[17,"__PTHREAD_ATTR_SIZE__","","",null,null],[17,"__PTHREAD_MUTEXATTR_SIZE__","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_ONCE_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"__DARWIN_WCHAR_MAX","","",null,null],[17,"__DARWIN_WCHAR_MIN","","",null,null],[17,"_FORTIFY_SOURCE","","",null,null],[17,"RENAME_SECLUDE","","",null,null],[17,"RENAME_SWAP","","",null,null],[17,"RENAME_EXCL","","",null,null],[17,"__SLBF","","",null,null],[17,"__SNBF","","",null,null],[17,"__SRD","","",null,null],[17,"__SWR","","",null,null],[17,"__SRW","","",null,null],[17,"__SEOF","","",null,null],[17,"__SERR","","",null,null],[17,"__SMBF","","",null,null],[17,"__SAPP","","",null,null],[17,"__SSTR","","",null,null],[17,"__SOPT","","",null,null],[17,"__SNPT","","",null,null],[17,"__SOFF","","",null,null],[17,"__SMOD","","",null,null],[17,"__SALC","","",null,null],[17,"__SIGN","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"_IONBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"EOF","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"P_tmpdir","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"L_ctermid","","",null,null],[17,"__CTERMID_DEFINED","","",null,null],[17,"_USE_FORTIFY_LEVEL","","",null,null],[17,"__PRI_8_LENGTH_MODIFIER__","","",null,null],[17,"__PRI_64_LENGTH_MODIFIER__","","",null,null],[17,"__SCN_64_LENGTH_MODIFIER__","","",null,null],[17,"__PRI_MAX_LENGTH_MODIFIER__","","",null,null],[17,"__SCN_MAX_LENGTH_MODIFIER__","","",null,null],[17,"PRId8","","",null,null],[17,"PRIi8","","",null,null],[17,"PRIo8","","",null,null],[17,"PRIu8","","",null,null],[17,"PRIx8","","",null,null],[17,"PRIX8","","",null,null],[17,"PRId16","","",null,null],[17,"PRIi16","","",null,null],[17,"PRIo16","","",null,null],[17,"PRIu16","","",null,null],[17,"PRIx16","","",null,null],[17,"PRIX16","","",null,null],[17,"PRId32","","",null,null],[17,"PRIi32","","",null,null],[17,"PRIo32","","",null,null],[17,"PRIu32","","",null,null],[17,"PRIx32","","",null,null],[17,"PRIX32","","",null,null],[17,"PRId64","","",null,null],[17,"PRIi64","","",null,null],[17,"PRIo64","","",null,null],[17,"PRIu64","","",null,null],[17,"PRIx64","","",null,null],[17,"PRIX64","","",null,null],[17,"PRIdLEAST8","","",null,null],[17,"PRIiLEAST8","","",null,null],[17,"PRIoLEAST8","","",null,null],[17,"PRIuLEAST8","","",null,null],[17,"PRIxLEAST8","","",null,null],[17,"PRIXLEAST8","","",null,null],[17,"PRIdLEAST16","","",null,null],[17,"PRIiLEAST16","","",null,null],[17,"PRIoLEAST16","","",null,null],[17,"PRIuLEAST16","","",null,null],[17,"PRIxLEAST16","","",null,null],[17,"PRIXLEAST16","","",null,null],[17,"PRIdLEAST32","","",null,null],[17,"PRIiLEAST32","","",null,null],[17,"PRIoLEAST32","","",null,null],[17,"PRIuLEAST32","","",null,null],[17,"PRIxLEAST32","","",null,null],[17,"PRIXLEAST32","","",null,null],[17,"PRIdLEAST64","","",null,null],[17,"PRIiLEAST64","","",null,null],[17,"PRIoLEAST64","","",null,null],[17,"PRIuLEAST64","","",null,null],[17,"PRIxLEAST64","","",null,null],[17,"PRIXLEAST64","","",null,null],[17,"PRIdFAST8","","",null,null],[17,"PRIiFAST8","","",null,null],[17,"PRIoFAST8","","",null,null],[17,"PRIuFAST8","","",null,null],[17,"PRIxFAST8","","",null,null],[17,"PRIXFAST8","","",null,null],[17,"PRIdFAST16","","",null,null],[17,"PRIiFAST16","","",null,null],[17,"PRIoFAST16","","",null,null],[17,"PRIuFAST16","","",null,null],[17,"PRIxFAST16","","",null,null],[17,"PRIXFAST16","","",null,null],[17,"PRIdFAST32","","",null,null],[17,"PRIiFAST32","","",null,null],[17,"PRIoFAST32","","",null,null],[17,"PRIuFAST32","","",null,null],[17,"PRIxFAST32","","",null,null],[17,"PRIXFAST32","","",null,null],[17,"PRIdFAST64","","",null,null],[17,"PRIiFAST64","","",null,null],[17,"PRIoFAST64","","",null,null],[17,"PRIuFAST64","","",null,null],[17,"PRIxFAST64","","",null,null],[17,"PRIXFAST64","","",null,null],[17,"PRIdPTR","","",null,null],[17,"PRIiPTR","","",null,null],[17,"PRIoPTR","","",null,null],[17,"PRIuPTR","","",null,null],[17,"PRIxPTR","","",null,null],[17,"PRIXPTR","","",null,null],[17,"PRIdMAX","","",null,null],[17,"PRIiMAX","","",null,null],[17,"PRIoMAX","","",null,null],[17,"PRIuMAX","","",null,null],[17,"PRIxMAX","","",null,null],[17,"PRIXMAX","","",null,null],[17,"SCNd8","","",null,null],[17,"SCNi8","","",null,null],[17,"SCNo8","","",null,null],[17,"SCNu8","","",null,null],[17,"SCNx8","","",null,null],[17,"SCNd16","","",null,null],[17,"SCNi16","","",null,null],[17,"SCNo16","","",null,null],[17,"SCNu16","","",null,null],[17,"SCNx16","","",null,null],[17,"SCNd32","","",null,null],[17,"SCNi32","","",null,null],[17,"SCNo32","","",null,null],[17,"SCNu32","","",null,null],[17,"SCNx32","","",null,null],[17,"SCNd64","","",null,null],[17,"SCNi64","","",null,null],[17,"SCNo64","","",null,null],[17,"SCNu64","","",null,null],[17,"SCNx64","","",null,null],[17,"SCNdLEAST8","","",null,null],[17,"SCNiLEAST8","","",null,null],[17,"SCNoLEAST8","","",null,null],[17,"SCNuLEAST8","","",null,null],[17,"SCNxLEAST8","","",null,null],[17,"SCNdLEAST16","","",null,null],[17,"SCNiLEAST16","","",null,null],[17,"SCNoLEAST16","","",null,null],[17,"SCNuLEAST16","","",null,null],[17,"SCNxLEAST16","","",null,null],[17,"SCNdLEAST32","","",null,null],[17,"SCNiLEAST32","","",null,null],[17,"SCNoLEAST32","","",null,null],[17,"SCNuLEAST32","","",null,null],[17,"SCNxLEAST32","","",null,null],[17,"SCNdLEAST64","","",null,null],[17,"SCNiLEAST64","","",null,null],[17,"SCNoLEAST64","","",null,null],[17,"SCNuLEAST64","","",null,null],[17,"SCNxLEAST64","","",null,null],[17,"SCNdFAST8","","",null,null],[17,"SCNiFAST8","","",null,null],[17,"SCNoFAST8","","",null,null],[17,"SCNuFAST8","","",null,null],[17,"SCNxFAST8","","",null,null],[17,"SCNdFAST16","","",null,null],[17,"SCNiFAST16","","",null,null],[17,"SCNoFAST16","","",null,null],[17,"SCNuFAST16","","",null,null],[17,"SCNxFAST16","","",null,null],[17,"SCNdFAST32","","",null,null],[17,"SCNiFAST32","","",null,null],[17,"SCNoFAST32","","",null,null],[17,"SCNuFAST32","","",null,null],[17,"SCNxFAST32","","",null,null],[17,"SCNdFAST64","","",null,null],[17,"SCNiFAST64","","",null,null],[17,"SCNoFAST64","","",null,null],[17,"SCNuFAST64","","",null,null],[17,"SCNxFAST64","","",null,null],[17,"SCNdPTR","","",null,null],[17,"SCNiPTR","","",null,null],[17,"SCNoPTR","","",null,null],[17,"SCNuPTR","","",null,null],[17,"SCNxPTR","","",null,null],[17,"SCNdMAX","","",null,null],[17,"SCNiMAX","","",null,null],[17,"SCNoMAX","","",null,null],[17,"SCNuMAX","","",null,null],[17,"SCNxMAX","","",null,null],[17,"__WORDSIZE","","",null,null],[17,"INT8_MAX","","",null,null],[17,"INT16_MAX","","",null,null],[17,"INT32_MAX","","",null,null],[17,"INT64_MAX","","",null,null],[17,"INT8_MIN","","",null,null],[17,"INT16_MIN","","",null,null],[17,"INT32_MIN","","",null,null],[17,"INT64_MIN","","",null,null],[17,"UINT8_MAX","","",null,null],[17,"UINT16_MAX","","",null,null],[17,"UINT32_MAX","","",null,null],[17,"UINT64_MAX","","",null,null],[17,"INT_LEAST8_MIN","","",null,null],[17,"INT_LEAST16_MIN","","",null,null],[17,"INT_LEAST32_MIN","","",null,null],[17,"INT_LEAST64_MIN","","",null,null],[17,"INT_LEAST8_MAX","","",null,null],[17,"INT_LEAST16_MAX","","",null,null],[17,"INT_LEAST32_MAX","","",null,null],[17,"INT_LEAST64_MAX","","",null,null],[17,"UINT_LEAST8_MAX","","",null,null],[17,"UINT_LEAST16_MAX","","",null,null],[17,"UINT_LEAST32_MAX","","",null,null],[17,"UINT_LEAST64_MAX","","",null,null],[17,"INT_FAST8_MIN","","",null,null],[17,"INT_FAST16_MIN","","",null,null],[17,"INT_FAST32_MIN","","",null,null],[17,"INT_FAST64_MIN","","",null,null],[17,"INT_FAST8_MAX","","",null,null],[17,"INT_FAST16_MAX","","",null,null],[17,"INT_FAST32_MAX","","",null,null],[17,"INT_FAST64_MAX","","",null,null],[17,"UINT_FAST8_MAX","","",null,null],[17,"UINT_FAST16_MAX","","",null,null],[17,"UINT_FAST32_MAX","","",null,null],[17,"UINT_FAST64_MAX","","",null,null],[17,"INTPTR_MIN","","",null,null],[17,"INTPTR_MAX","","",null,null],[17,"UINTPTR_MAX","","",null,null],[17,"INTMAX_MIN","","",null,null],[17,"INTMAX_MAX","","",null,null],[17,"UINTMAX_MAX","","",null,null],[17,"PTRDIFF_MIN","","",null,null],[17,"PTRDIFF_MAX","","",null,null],[17,"SIZE_MAX","","",null,null],[17,"RSIZE_MAX","","",null,null],[17,"WCHAR_MAX","","",null,null],[17,"WCHAR_MIN","","",null,null],[17,"WINT_MIN","","",null,null],[17,"WINT_MAX","","",null,null],[17,"SIG_ATOMIC_MIN","","",null,null],[17,"SIG_ATOMIC_MAX","","",null,null],[17,"_QUAD_HIGHWORD","","",null,null],[17,"_QUAD_LOWWORD","","",null,null],[17,"__DARWIN_LITTLE_ENDIAN","","",null,null],[17,"__DARWIN_BIG_ENDIAN","","",null,null],[17,"__DARWIN_PDP_ENDIAN","","",null,null],[17,"__DARWIN_BYTE_ORDER","","",null,null],[17,"LITTLE_ENDIAN","","",null,null],[17,"BIG_ENDIAN","","",null,null],[17,"PDP_ENDIAN","","",null,null],[17,"BYTE_ORDER","","",null,null],[17,"__DARWIN_FD_SETSIZE","","",null,null],[17,"__DARWIN_NBBY","","",null,null],[17,"NBBY","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"KEV_INET_SUBCLASS","","",null,null],[17,"KEV_INET_NEW_ADDR","","",null,null],[17,"KEV_INET_CHANGED_ADDR","","",null,null],[17,"KEV_INET_ADDR_DELETED","","",null,null],[17,"KEV_INET_SIFDSTADDR","","",null,null],[17,"KEV_INET_SIFBRDADDR","","",null,null],[17,"KEV_INET_SIFNETMASK","","",null,null],[17,"KEV_INET_ARPCOLLISION","","",null,null],[17,"KEV_INET_PORTINUSE","","",null,null],[17,"KEV_INET_ARPRTRFAILURE","","",null,null],[17,"KEV_INET_ARPRTRALIVE","","",null,null],[17,"KEV_DL_SUBCLASS","","",null,null],[17,"KEV_DL_SIFFLAGS","","",null,null],[17,"KEV_DL_SIFMETRICS","","",null,null],[17,"KEV_DL_SIFMTU","","",null,null],[17,"KEV_DL_SIFPHYS","","",null,null],[17,"KEV_DL_SIFMEDIA","","",null,null],[17,"KEV_DL_SIFGENERIC","","",null,null],[17,"KEV_DL_ADDMULTI","","",null,null],[17,"KEV_DL_DELMULTI","","",null,null],[17,"KEV_DL_IF_ATTACHED","","",null,null],[17,"KEV_DL_IF_DETACHING","","",null,null],[17,"KEV_DL_IF_DETACHED","","",null,null],[17,"KEV_DL_LINK_OFF","","",null,null],[17,"KEV_DL_LINK_ON","","",null,null],[17,"KEV_DL_PROTO_ATTACHED","","",null,null],[17,"KEV_DL_PROTO_DETACHED","","",null,null],[17,"KEV_DL_LINK_ADDRESS_CHANGED","","",null,null],[17,"KEV_DL_WAKEFLAGS_CHANGED","","",null,null],[17,"KEV_DL_IF_IDLE_ROUTE_REFCNT","","",null,null],[17,"KEV_DL_IFCAP_CHANGED","","",null,null],[17,"KEV_DL_LINK_QUALITY_METRIC_CHANGED","","",null,null],[17,"KEV_DL_NODE_PRESENCE","","",null,null],[17,"KEV_DL_NODE_ABSENCE","","",null,null],[17,"KEV_DL_MASTER_ELECTED","","",null,null],[17,"KEV_DL_ISSUES","","",null,null],[17,"KEV_DL_IFDELEGATE_CHANGED","","",null,null],[17,"KEV_DL_AWDL_RESTRICTED","","",null,null],[17,"KEV_DL_AWDL_UNRESTRICTED","","",null,null],[17,"KEV_DL_RRC_STATE_CHANGED","","",null,null],[17,"KEV_DL_QOS_MODE_CHANGED","","",null,null],[17,"KEV_INET6_SUBCLASS","","",null,null],[17,"KEV_INET6_NEW_USER_ADDR","","",null,null],[17,"KEV_INET6_CHANGED_ADDR","","",null,null],[17,"KEV_INET6_ADDR_DELETED","","",null,null],[17,"KEV_INET6_NEW_LL_ADDR","","",null,null],[17,"KEV_INET6_NEW_RTADV_ADDR","","",null,null],[17,"KEV_INET6_DEFROUTER","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_UPCALLCLOSEWAIT","","",null,null],[17,"SO_LINGER_SEC","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"SO_NUMRCVPKT","","",null,null],[17,"SO_NET_SERVICE_TYPE","","",null,null],[17,"NET_SERVICE_TYPE_BE","","",null,null],[17,"NET_SERVICE_TYPE_BK","","",null,null],[17,"NET_SERVICE_TYPE_SIG","","",null,null],[17,"NET_SERVICE_TYPE_VI","","",null,null],[17,"NET_SERVICE_TYPE_VO","","",null,null],[17,"NET_SERVICE_TYPE_RV","","",null,null],[17,"NET_SERVICE_TYPE_AV","","",null,null],[17,"NET_SERVICE_TYPE_OAM","","",null,null],[17,"NET_SERVICE_TYPE_RD","","",null,null],[17,"SO_NETSVC_MARKING_LEVEL","","",null,null],[17,"NETSVC_MRKNG_UNKNOWN","","",null,null],[17,"NETSVC_MRKNG_LVL_L2","","",null,null],[17,"NETSVC_MRKNG_LVL_L3L2_ALL","","",null,null],[17,"NETSVC_MRKNG_LVL_L3L2_BK","","",null,null],[17,"SAE_ASSOCID_ANY","","",null,null],[17,"SAE_CONNID_ANY","","",null,null],[17,"CONNECT_RESUME_ON_READ_WRITE","","",null,null],[17,"CONNECT_DATA_IDEMPOTENT","","",null,null],[17,"CONNECT_DATA_AUTHENTICATED","","",null,null],[17,"SONPX_SETOPTSHUT","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_NDRV","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_RESERVED_36","","",null,null],[17,"AF_IEEE80211","","",null,null],[17,"AF_UTUN","","",null,null],[17,"AF_MAX","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"_SS_MAXSIZE","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_NDRV","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"PF_RESERVED_36","","",null,null],[17,"PF_UTUN","","",null,null],[17,"PF_MAX","","",null,null],[17,"NET_MAXID","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"NET_RT_STAT","","",null,null],[17,"NET_RT_TRASH","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"NET_RT_DUMP2","","",null,null],[17,"NET_RT_MAXID","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_WAITSTREAM","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"MSG_NEEDSA","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"SCM_TIMESTAMP_MONOTONIC","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LIBRDKAFKA_TYPECHECKS","","",null,null],[17,"RD_KAFKA_VERSION","","",null,null],[17,"RD_KAFKA_DEBUG_CONTEXTS","","",null,null],[17,"RD_KAFKA_OFFSET_BEGINNING","","",null,null],[17,"RD_KAFKA_OFFSET_END","","",null,null],[17,"RD_KAFKA_OFFSET_STORED","","",null,null],[17,"RD_KAFKA_OFFSET_INVALID","","",null,null],[17,"RD_KAFKA_OFFSET_TAIL_BASE","","",null,null],[17,"RD_KAFKA_MSG_F_FREE","","",null,null],[17,"RD_KAFKA_MSG_F_COPY","","",null,null],[17,"RD_KAFKA_MSG_F_BLOCK","","",null,null],[17,"RD_KAFKA_EVENT_NONE","","",null,null],[17,"RD_KAFKA_EVENT_DR","","",null,null],[17,"RD_KAFKA_EVENT_FETCH","","",null,null],[17,"RD_KAFKA_EVENT_LOG","","",null,null],[17,"RD_KAFKA_EVENT_ERROR","","",null,null],[17,"RD_KAFKA_EVENT_REBALANCE","","",null,null],[17,"RD_KAFKA_EVENT_OFFSET_COMMIT","","",null,null],[17,"RD_KAFKA_EVENT_STATS","","",null,null],[0,"helpers","rdkafka_sys","",null,null],[5,"primitive_to_rd_kafka_resp_err_t","rdkafka_sys::helpers","This is not great. For legacy reasons some usage of rd_kafka_resp_err_t is passed as an integer in some places. There seems to be no easy way in Rust to match this the other way around so we do it manually.",null,{"inputs":[{"name":"i32"}],"output":{"generics":["rdkafkaresperr"],"name":"option"}}],[5,"rd_kafka_resp_err_t_to_rdkafka_error","","",null,{"inputs":[{"name":"rdkafkaresperr"}],"output":{"name":"rdkafkaerror"}}],[0,"types","rdkafka_sys","This module contains type aliases for types defined in the auto-generated bindings.",null,null],[4,"RDKafkaType","rdkafka_sys::types","",null,null],[13,"RD_KAFKA_PRODUCER","","",37,null],[13,"RD_KAFKA_CONSUMER","","",37,null],[4,"RDKafkaConfRes","","",null,null],[13,"RD_KAFKA_CONF_UNKNOWN","","",41,null],[13,"RD_KAFKA_CONF_INVALID","","",41,null],[13,"RD_KAFKA_CONF_OK","","",41,null],[4,"RDKafkaRespErr","","",null,null],[13,"RD_KAFKA_RESP_ERR__BEGIN","","",39,null],[13,"RD_KAFKA_RESP_ERR__BAD_MSG","","",39,null],[13,"RD_KAFKA_RESP_ERR__BAD_COMPRESSION","","",39,null],[13,"RD_KAFKA_RESP_ERR__DESTROY","","",39,null],[13,"RD_KAFKA_RESP_ERR__FAIL","","",39,null],[13,"RD_KAFKA_RESP_ERR__TRANSPORT","","",39,null],[13,"RD_KAFKA_RESP_ERR__CRIT_SYS_RESOURCE","","",39,null],[13,"RD_KAFKA_RESP_ERR__RESOLVE","","",39,null],[13,"RD_KAFKA_RESP_ERR__MSG_TIMED_OUT","","",39,null],[13,"RD_KAFKA_RESP_ERR__PARTITION_EOF","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PARTITION","","",39,null],[13,"RD_KAFKA_RESP_ERR__FS","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_TOPIC","","",39,null],[13,"RD_KAFKA_RESP_ERR__ALL_BROKERS_DOWN","","",39,null],[13,"RD_KAFKA_RESP_ERR__INVALID_ARG","","",39,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT","","",39,null],[13,"RD_KAFKA_RESP_ERR__QUEUE_FULL","","",39,null],[13,"RD_KAFKA_RESP_ERR__ISR_INSUFF","","",39,null],[13,"RD_KAFKA_RESP_ERR__NODE_UPDATE","","",39,null],[13,"RD_KAFKA_RESP_ERR__SSL","","",39,null],[13,"RD_KAFKA_RESP_ERR__WAIT_COORD","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_GROUP","","",39,null],[13,"RD_KAFKA_RESP_ERR__IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR__PREV_IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR__EXISTING_SUBSCRIPTION","","",39,null],[13,"RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR__CONFLICT","","",39,null],[13,"RD_KAFKA_RESP_ERR__STATE","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNKNOWN_PROTOCOL","","",39,null],[13,"RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED","","",39,null],[13,"RD_KAFKA_RESP_ERR__AUTHENTICATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__NO_OFFSET","","",39,null],[13,"RD_KAFKA_RESP_ERR__OUTDATED","","",39,null],[13,"RD_KAFKA_RESP_ERR__TIMED_OUT_QUEUE","","",39,null],[13,"RD_KAFKA_RESP_ERR__UNSUPPORTED_FEATURE","","",39,null],[13,"RD_KAFKA_RESP_ERR__WAIT_CACHE","","",39,null],[13,"RD_KAFKA_RESP_ERR__INTR","","",39,null],[13,"RD_KAFKA_RESP_ERR__KEY_SERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__VALUE_SERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__KEY_DESERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__VALUE_DESERIALIZATION","","",39,null],[13,"RD_KAFKA_RESP_ERR__PARTIAL","","",39,null],[13,"RD_KAFKA_RESP_ERR__END","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN","","",39,null],[13,"RD_KAFKA_RESP_ERR_NO_ERROR","","",39,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_OUT_OF_RANGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_TOPIC_OR_PART","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_MSG_SIZE","","",39,null],[13,"RD_KAFKA_RESP_ERR_LEADER_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_LEADER_FOR_PARTITION","","",39,null],[13,"RD_KAFKA_RESP_ERR_REQUEST_TIMED_OUT","","",39,null],[13,"RD_KAFKA_RESP_ERR_BROKER_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_REPLICA_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_MSG_SIZE_TOO_LARGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_STALE_CTRL_EPOCH","","",39,null],[13,"RD_KAFKA_RESP_ERR_OFFSET_METADATA_TOO_LARGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NETWORK_EXCEPTION","","",39,null],[13,"RD_KAFKA_RESP_ERR_GROUP_LOAD_IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR_GROUP_COORDINATOR_NOT_AVAILABLE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_COORDINATOR_FOR_GROUP","","",39,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_EXCEPTION","","",39,null],[13,"RD_KAFKA_RESP_ERR_RECORD_LIST_TOO_LARGE","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_ENOUGH_REPLICAS_AFTER_APPEND","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUIRED_ACKS","","",39,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_GENERATION","","",39,null],[13,"RD_KAFKA_RESP_ERR_INCONSISTENT_GROUP_PROTOCOL","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_GROUP_ID","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNKNOWN_MEMBER_ID","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_SESSION_TIMEOUT","","",39,null],[13,"RD_KAFKA_RESP_ERR_REBALANCE_IN_PROGRESS","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_COMMIT_OFFSET_SIZE","","",39,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_GROUP_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_CLUSTER_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TIMESTAMP","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_SASL_MECHANISM","","",39,null],[13,"RD_KAFKA_RESP_ERR_ILLEGAL_SASL_STATE","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_VERSION","","",39,null],[13,"RD_KAFKA_RESP_ERR_TOPIC_ALREADY_EXISTS","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PARTITIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICATION_FACTOR","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REPLICA_ASSIGNMENT","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_CONFIG","","",39,null],[13,"RD_KAFKA_RESP_ERR_NOT_CONTROLLER","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_REQUEST","","",39,null],[13,"RD_KAFKA_RESP_ERR_UNSUPPORTED_FOR_MESSAGE_FORMAT","","",39,null],[13,"RD_KAFKA_RESP_ERR_POLICY_VIOLATION","","",39,null],[13,"RD_KAFKA_RESP_ERR_OUT_OF_ORDER_SEQUENCE_NUMBER","","",39,null],[13,"RD_KAFKA_RESP_ERR_DUPLICATE_SEQUENCE_NUMBER","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_EPOCH","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TXN_STATE","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_PRODUCER_ID_MAPPING","","",39,null],[13,"RD_KAFKA_RESP_ERR_INVALID_TRANSACTION_TIMEOUT","","",39,null],[13,"RD_KAFKA_RESP_ERR_CONCURRENT_TRANSACTIONS","","",39,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTION_COORDINATOR_FENCED","","",39,null],[13,"RD_KAFKA_RESP_ERR_TRANSACTIONAL_ID_AUTHORIZATION_FAILED","","",39,null],[13,"RD_KAFKA_RESP_ERR_SECURITY_DISABLED","","",39,null],[13,"RD_KAFKA_RESP_ERR_OPERATION_NOT_ATTEMPTED","","",39,null],[13,"RD_KAFKA_RESP_ERR_END_ALL","","",39,null],[4,"RDKafkaError","","Errors enum Error from the underlying rdkafka library.",null,null],[13,"BadMessage","","Received message is incorrect",49,null],[13,"BadCompression","","Bad/unknown compression",49,null],[13,"BrokerDestroy","","Broker is going away",49,null],[13,"Fail","","Generic failure",49,null],[13,"BrokerTransportFailure","","Broker transport failure",49,null],[13,"CriticalSystemResource","","Critical system resource",49,null],[13,"Resolve","","Failed to resolve broker",49,null],[13,"MessageTimedOut","","Produced message timed out",49,null],[13,"PartitionEOF","","Reached the end of the topic+partition queue on the broker. Not really an error.",49,null],[13,"UnknownPartition","","Permanent: Partition does not exist in cluster.",49,null],[13,"FileSystem","","File or filesystem error",49,null],[13,"UnknownTopic","","Permanent: Topic does not exist in cluster.",49,null],[13,"AllBrokersDown","","All broker connections are down.",49,null],[13,"InvalidArgument","","Invalid argument, or invalid configuration",49,null],[13,"OperationTimedOut","","Operation timed out",49,null],[13,"QueueFull","","Queue is full",49,null],[13,"ISRInsufficient","","ISR count < required.acks",49,null],[13,"NodeUpdate","","Broker node update",49,null],[13,"SSL","","SSL error",49,null],[13,"WaitingForCoordinator","","Waiting for coordinator to become available.",49,null],[13,"UnknownGroup","","Unknown client group",49,null],[13,"InProgress","","Operation in progress",49,null],[13,"PreviousInProgress","","Previous operation in progress, wait for it to finish.",49,null],[13,"ExistingSubscription","","This operation would interfere with an existing subscription",49,null],[13,"AssignPartitions","","Assigned partitions (rebalance_cb)",49,null],[13,"RevokePartitions","","Revoked partitions (rebalance_cb)",49,null],[13,"Conflict","","Conflicting use",49,null],[13,"State","","Wrong state",49,null],[13,"UnknownProtocol","","Unknown protocol",49,null],[13,"NotImplemented","","Not implemented",49,null],[13,"Authentication","","Authentication failure",49,null],[13,"NoOffset","","No stored offset",49,null],[13,"Outdated","","Outdated",49,null],[13,"TimedOutQueue","","Timed out in queue",49,null],[13,"UnsupportedFeature","","Feature not supported by broker",49,null],[13,"WaitCache","","Awaiting cache update",49,null],[13,"Interrupted","","Operation interrupted (e.g., due to yield))",49,null],[13,"KeySerialization","","Key serialization error",49,null],[13,"ValueSerialization","","Value serialization error",49,null],[13,"KeyDeserialization","","Key deserialization error",49,null],[13,"ValueDeserialization","","Value deserialization error",49,null],[13,"Partial","","Partial response",49,null],[13,"Unknown","","Unknown broker error",49,null],[13,"NoError","","Success",49,null],[13,"OffsetOutOfRange","","Offset out of range",49,null],[13,"InvalidMessage","","Invalid message",49,null],[13,"UnknownTopicOrPartition","","Unknown topic or partition",49,null],[13,"InvalidMessageSize","","Invalid message size",49,null],[13,"LeaderNotAvailable","","Leader not available",49,null],[13,"NotLeaderForPartition","","Not leader for partition",49,null],[13,"RequestTimedOut","","Request timed out",49,null],[13,"BrokerNotAvailable","","Broker not available",49,null],[13,"ReplicaNotAvailable","","Replica not available",49,null],[13,"MessageSizeTooLarge","","Message size too large",49,null],[13,"StaleControllerEpoch","","Stale controller epoch code",49,null],[13,"OffsetMetadataTooLarge","","Offset metadata string too large",49,null],[13,"NetworkException","","Broker disconnected before response received",49,null],[13,"GroupLoadInProgress","","Group coordinator load in progress",49,null],[13,"GroupCoordinatorNotAvailable","","Group coordinator not available",49,null],[13,"NotCoordinatorForGroup","","Not coordinator for group",49,null],[13,"InvalidTopic","","Invalid topic",49,null],[13,"MessageBatchTooLarge","","Message batch larger than configured server segment size",49,null],[13,"NotEnoughReplicas","","Not enough in-sync replicas",49,null],[13,"NotEnoughReplicasAfterAppend","","Message(s) written to insufficient number of in-sync replicas",49,null],[13,"InvalidRequiredAcks","","Invalid required acks value",49,null],[13,"IllegalGeneration","","Specified group generation id is not valid",49,null],[13,"InconsistentGroupProtocol","","Inconsistent group protocol",49,null],[13,"InvalidGroupId","","Invalid group.id",49,null],[13,"UnknownMemberId","","Unknown member",49,null],[13,"InvalidSessionTimeout","","Invalid session timeout",49,null],[13,"RebalanceInProgress","","Group rebalance in progress",49,null],[13,"InvalidCommitOffsetSize","","Commit offset data size is not valid",49,null],[13,"TopicAuthorizationFailed","","Topic authorization failed",49,null],[13,"GroupAuthorizationFailed","","Group authorization failed",49,null],[13,"ClusterAuthorizationFailed","","Cluster authorization failed",49,null],[13,"InvalidTimestamp","","Invalid timestamp",49,null],[13,"UnsupportedSASLMechanism","","Unsupported SASL mechanism",49,null],[13,"IllegalSASLState","","Illegal SASL state",49,null],[13,"UnsupportedVersion","","Unsupported version",49,null],[13,"TopicAlreadyExists","","Topic already exists",49,null],[13,"InvalidPartitions","","Invalid number of partitions",49,null],[13,"InvalidReplicationFactor","","Invalid replication factor",49,null],[13,"InvalidReplicaAssignment","","Invalid replica assignment",49,null],[13,"InvalidConfig","","Invalid config */",49,null],[13,"NotController","","Not controller for cluster",49,null],[13,"InvalidRequest","","Invalid request",49,null],[13,"UnsupportedForMessageFormat","","Message format on broker does not support request",49,null],[13,"PolicyViolation","","Policy violation",49,null],[13,"OutOfOrderSequenceNumber","","Broker received an out of order sequence number",49,null],[13,"DuplicateSequenceNumber","","Broker received a duplicate sequence number",49,null],[13,"InvalidProducerEpoch","","Producer attempted an operation with an old epoch",49,null],[13,"InvalidTransactionalState","","Producer attempted a transactional operation in an invalid state",49,null],[13,"InvalidProducerIdMapping","","Producer attempted to use a producer id which is currently assigned to its transactional id",49,null],[13,"InvalidTransactionTimeout","","Transaction timeout is larger than the maxi value allowed by the broker's max.transaction.timeout.ms",49,null],[13,"ConcurrentTransactions","","Producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing",49,null],[13,"TransactionCoordinatorFenced","","Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer",49,null],[13,"TransactionalIdAuthorizationFailed","","Transactional Id authorization failed",49,null],[13,"SecurityDisabled","","Security features are disabled",49,null],[13,"OperationNotAttempted","","Operation not attempted",49,null],[6,"RDKafka","","Native rdkafka client",null,null],[6,"RDKafkaConf","","Native rdkafka configuration",null,null],[6,"RDKafkaMessage","","Native rdkafka message",null,null],[6,"RDKafkaTopic","","Native rdkafka topic",null,null],[6,"RDKafkaTopicConf","","Native rdkafka topic configuration",null,null],[6,"RDKafkaTopicPartition","","Native rdkafka topic partition",null,null],[6,"RDKafkaTopicPartitionList","","Native rdkafka topic partition list",null,null],[6,"RDKafkaMetadata","","Native rdkafka metadata container",null,null],[6,"RDKafkaMetadataTopic","","Native rdkafka topic information",null,null],[6,"RDKafkaMetadataPartition","","Native rdkafka partition information",null,null],[6,"RDKafkaMetadataBroker","","Native rdkafka broker information",null,null],[6,"RDKafkaState","","Native rdkafka state",null,null],[6,"RDKafkaGroupList","","Native rdkafka list of groups",null,null],[6,"RDKafkaGroupInfo","","Native rdkafka group information",null,null],[6,"RDKafkaGroupMemberInfo","","Native rdkafka group member information",null,null],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"rdkafkaerror"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"rdkafkaerror"}],"output":{"name":"bool"}}],[11,"from","","",49,{"inputs":[{"name":"rdkafkaresperr"}],"output":{"name":"rdkafkaerror"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",49,{"inputs":[{"name":"self"}],"output":{"name":"str"}}]],"paths":[[3,"__darwin_pthread_handler_rec"],[3,"_opaque_pthread_attr_t"],[3,"_opaque_pthread_cond_t"],[3,"_opaque_pthread_condattr_t"],[3,"_opaque_pthread_mutex_t"],[3,"_opaque_pthread_mutexattr_t"],[3,"_opaque_pthread_once_t"],[3,"_opaque_pthread_rwlock_t"],[3,"_opaque_pthread_rwlockattr_t"],[3,"_opaque_pthread_t"],[3,"__sbuf"],[3,"__sFILE"],[3,"imaxdiv_t"],[3,"fd_set"],[3,"iovec"],[3,"sa_endpoints"],[3,"linger"],[3,"so_np_extensions"],[3,"sockaddr"],[3,"sockproto"],[3,"sockaddr_storage"],[3,"msghdr"],[3,"cmsghdr"],[3,"sf_hdtr"],[3,"rd_kafka_err_desc"],[3,"rd_kafka_topic_partition_s"],[3,"rd_kafka_topic_partition_list_s"],[3,"rd_kafka_message_s"],[3,"rd_kafka_metadata_broker"],[3,"rd_kafka_metadata_partition"],[3,"rd_kafka_metadata_topic"],[3,"rd_kafka_metadata"],[3,"rd_kafka_group_member_info"],[3,"rd_kafka_group_info"],[3,"rd_kafka_group_list"],[3,"__va_list_tag"],[19,"__mbstate_t"],[4,"rd_kafka_type_t"],[4,"rd_kafka_timestamp_type_t"],[4,"rd_kafka_resp_err_t"],[4,"rd_kafka_vtype_t"],[4,"rd_kafka_conf_res_t"],[3,"__sFILEX"],[3,"rd_kafka_s"],[3,"rd_kafka_topic_s"],[3,"rd_kafka_conf_s"],[3,"rd_kafka_topic_conf_s"],[3,"rd_kafka_queue_s"],[3,"rd_kafka_op_s"],[4,"RDKafkaError"]]};
initSearch(searchIndex);
